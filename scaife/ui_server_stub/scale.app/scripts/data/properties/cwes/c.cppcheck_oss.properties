#
# Mappings from CppCheck error identifiers (aka categories) to CWEs
# <legal>
# SCALe version r.6.5.5.1.A
# 
# Copyright 2021 Carnegie Mellon University.
# 
# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
# INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
# UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR
# IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF
# FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS
# OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
# MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT,
# TRADEMARK, OR COPYRIGHT INFRINGEMENT.
# 
# Released under a MIT (SEI)-style license, please see COPYRIGHT file or
# contact permission@sei.cmu.edu for full terms.
# 
# [DISTRIBUTION STATEMENT A] This material has been approved for public
# release and unlimited distribution.  Please see Copyright notice for
# non-US Government use and distribution.
# 
# DM19-1274
# </legal>

arrayIndexOutOfBounds : CWE-119
arrayIndexOutOfBoundsCond : CWE-119
insecureCmdLineArgs : CWE-119
strncatUsage : CWE-119
signedCharArrayIndex : CWE-128
incompleteArrayFill : CWE-131
mismatchSize : CWE-131
negativeMemoryAllocationSize : CWE-131
bufferNotZeroTerminated : CWE-170
terminateStrncpy : CWE-170
floatConversionOverflow : CWE-190
integerOverflow : CWE-190
signConversion : CWE-195
ignoredReturnValue : CWE-252
raceAfterInterlockedDecrement : CWE-362
nanInArithmeticExpression : CWE-369
zerodiv : CWE-369
zerodivcond : CWE-369
argumentSize : CWE-398
arrayIndexThenCheck : CWE-398
assertWithSideEffect : CWE-398
assignIfError : CWE-398
assignmentInAssert : CWE-398
bitwiseOnBoolean : CWE-398
catchExceptionByValue : CWE-398
clarifyCondition : CWE-398
compareBoolExpressionWithInt : CWE-398
comparisonError : CWE-398
comparisonOfBoolWithBoolError : CWE-398
comparisonOfFuncReturningBoolError : CWE-398
comparisonOfTwoFuncsReturningBoolError : CWE-398
constStatement : CWE-398
copyCtorPointerCopying : CWE-398
coutCerrMisusage : CWE-398
cstyleCast : CWE-398
duplicateBranch : CWE-398
duplicateExpression : CWE-398
duplicateExpressionTernary : CWE-398
duplInheritedMember : CWE-398
exceptDeallocThrow : CWE-398
exceptThrowInDestructor : CWE-398
fflushOnInputStream : CWE-398
functionConst : CWE-398
functionStatic : CWE-398
incrementboolean : CWE-398
initializerList : CWE-398
mismatchingBitAnd : CWE-398
moduloAlwaysTrueFalse : CWE-398
multiCondition : CWE-398
noConstructor : CWE-398
noCopyConstructor : CWE-398
noExplicitConstructor : CWE-398
operatorEqMissingReturnStatement : CWE-398
operatorEqRetRefThis : CWE-398
operatorEqShouldBeLeftUnimplemented : CWE-398
operatorEqToSelf : CWE-398
operatorEqVarError : CWE-398
oppositeInnerCondition : CWE-398
passedByValue : CWE-398
pointerOutOfBounds : CWE-398
possibleBufferAccessOutOfBounds : CWE-398
postfixOperator : CWE-398
publicAllocationError : CWE-398
reademptycontainer : CWE-398
redundantCondition : CWE-398
redundantIfRemove : CWE-398
redundantPointerOp : CWE-398
seekOnAppendedFile : CWE-398
selfAssignment : CWE-398
stlIfFind : CWE-398
stlSize : CWE-398
suspiciousCase : CWE-398
thisSubtraction : CWE-398
throwInNoexceptFunction : CWE-398
uninitMemberVar : CWE-398
unsafeClassCanLeak : CWE-398
unusedLabel : CWE-398
unusedLabelSwitch : CWE-398
unusedPrivateFunction : CWE-398
useAutoPointerCopy : CWE-398
useInitializationList : CWE-398
uselessAssignmentArg : CWE-398
uselessAssignmentPtrArg : CWE-398
uselessCallsEmpty : CWE-398
uselessCallsSubstr : CWE-398
memleak : CWE-401
memleakOnRealloc : CWE-401
virtualDestructor : CWE-404
deallocDealloc : CWE-415
doubleFree : CWE-415
deallocuse : CWE-416
arithOperationsOnVoidPointer : CWE-467
pointerSize : CWE-467
nullPointer : CWE-476
nullPointerDefaultArg : CWE-476
nullPointerRedundantCheck : CWE-476
suspiciousEqualityComparison : CWE-482
duplicateBreak : CWE-561
unreachableCode : CWE-561
autoVariables : CWE-562
returnAddressOfAutoVariable : CWE-562
returnAddressOfFunctionParameter : CWE-562
returnLocalVariable : CWE-562
returnReference : CWE-562
returnTempReference : CWE-562
redundantAssignment : CWE-563
redundantCopy : CWE-563
unreadVariable : CWE-563
unusedAllocatedMemory : CWE-563
unusedScopedObject : CWE-563
unusedStructMember : CWE-563
unusedVariable : CWE-563
incorrectLogicOperator : CWE-570
incorrectStringCompare : CWE-570
invalidTestForOverflow : CWE-570
knownConditionTrueFalse : CWE-570
pointerLessThanZero : CWE-570
pointerPositive : CWE-570
staticStringCompare : CWE-570
unsignedLessThanZero : CWE-570
unsignedPositive : CWE-570
badBitmaskCheck : CWE-571
incorrectLogicOperator : CWE-571
incorrectStringBooleanError : CWE-571
invalidTestForOverflow : CWE-571
knownConditionTrueFalse : CWE-571
pointerArithBool : CWE-571
staticStringCompare : CWE-571
stringCompare : CWE-571
assignBoolToPointer : CWE-587
autovarInvalidDeallocation : CWE-590
charLiteralWithCharPtrCompare : CWE-595
literalWithCharPtrCompare : CWE-595
invalidFunctionArg : CWE-628
invalidFunctionArgBool : CWE-628
sprintfOverlappingData : CWE-628
uselessCallsCompare : CWE-628
uselessCallsSwap : CWE-628
boostForeachError : CWE-664
eraseDereference : CWE-664
invalidIterator1 : CWE-664
invalidIterator2 : CWE-664
invalidPointer : CWE-664
IOWithoutPositioning : CWE-664
iterators : CWE-664
mismatchingContainers : CWE-664
readWriteOnlyFile : CWE-664
stlBoundaries : CWE-664
stlcstr : CWE-664
useAutoPointerArray : CWE-664
useAutoPointerContainer : CWE-664
va_end_missing : CWE-664
va_list_usedBeforeStarted : CWE-664
va_start_subsequentCalls : CWE-664
writeReadOnlyFile : CWE-664
mallocOnClassError : CWE-665
memsetClassReference : CWE-665
selfInitialization : CWE-665
strPlusChar : CWE-665
unassignedVariable : CWE-665
deallocret : CWE-672
errorId : CWE-672
uninitstring : CWE-676
divideSizeof : CWE-682
multiplySizeof : CWE-682
nullPointerArithmetic : CWE-682
nullPointerArithmeticRedundantCheck : CWE-682
sizeArgumentAsChar : CWE-682
sizeofCalculation : CWE-682
sizeofDereferencedVoidPointer : CWE-682
sizeofDivisionMemfunc : CWE-682
sizeofsizeof : CWE-682
sizeofVoid : CWE-682
sizeofwithnumericparameter : CWE-682
wrongPrintfScanfArgNum : CWE-685
wrongPrintfScanfParameterPositionError : CWE-685
invalidPrintfArgType_float : CWE-686
invalidPrintfArgType_int : CWE-686
invalidPrintfArgType_n : CWE-686
invalidPrintfArgType_p : CWE-686
invalidPrintfArgType_s : CWE-686
invalidPrintfArgType_sint : CWE-686
invalidPrintfArgType_uint : CWE-686
invalidScanfArgType_float : CWE-686
invalidScanfArgType_int : CWE-686
invalidScanfArgType_s : CWE-686
memsetValueOutOfRange : CWE-686
wrongPipeParameterSize : CWE-686
invalidScanfFormatWidth : CWE-687
memsetZeroBytes : CWE-687
memsetFloat : CWE-688
va_start_wrongParameter : CWE-688
unhandledExceptionSpecification : CWE-703
assignBoolToFloat : CWE-704
invalidLengthModifierError : CWE-704
invalidPointerCast : CWE-704
stlcstrParam : CWE-704
stlcstrReturn : CWE-704
AssignmentAddressToInteger : CWE-758
AssignmentIntegerToAddress : CWE-758
CastAddressToIntegerAtReturn : CWE-758
CastIntegerToAddressAtReturn : CWE-758
memsetClassFloat : CWE-758
negativeArraySize : CWE-758
shiftNegative : CWE-758
shiftNegativeLHS : CWE-758
shiftTooManyBits : CWE-758
stringLiteralWrite : CWE-758
unknownSignCharArrayIndex : CWE-758
unpreciseMathCall : CWE-758
va_start_referencePassed : CWE-758
wrongmathcall : CWE-758
mallocOnClassWarning : CWE-762
memsetClass : CWE-762
mismatchAllocDealloc : CWE-762
useAutoPointerMalloc : CWE-762
uselessCallsRemove : CWE-762
leakReturnValNotUsed : CWE-771
leakNoVarFunctionCall : CWE-772
resourceLeak : CWE-775
clarifyCalculation : CWE-783
negativeIndex : CWE-786
arrayIndexOutOfBounds : CWE-788
bufferAccessOutOfBounds : CWE-788
outOfBounds : CWE-788
stlOutOfBounds : CWE-788
deadpointer : CWE-825
derefInvalidIterator : CWE-825
StlMissingComparison : CWE-834
uninitdata : CWE-908
uninitStructMember : CWE-908
uninitvar : CWE-908
useClosedFile : CWE-910
