|DCL00-J|Prevent class initialization cycles|Low|Unlikely|Medium|2|3|
|DCL01-J|Do not reuse public identifiers from the Java Standard Library|Low|Unlikely|Medium|2|3|
|DCL02-J|Declare all enhanced for statement loop variables final|Low|Unlikely|Low|3|3|
|DRD00-J|Do not store sensitive information on external storage (SD card) unless encrypted first|High|Probable|Medium|12|1|
|DRD01-J|Limit the accessibility of an app's sensitive content provider|High|Probable|Low|18|1|
|DRD02-J|Do not allow WebView to access sensitive local resource through file scheme|High|Probable|High|6|2|
|DRD03-J|Do not broadcast sensitive information using an implicit intent|High|Probable|Medium|12|1|
|DRD04-J|Do not log sensitive information|High|Probable|Medium|12|1|
|DRD05-J|Do not grant URI permissions on implicit intents|High|Probable|Medium|12|1|
|DRD06-J|Do not act on malicious intents|High|Probable|Medium|12|1|
|DRD07-J|Protect exported services with strong permissions|High|Probable|Medium|12|1|
|DRD08-J|Always canonicalize a URL received by a content provider|High|Probable|Low|18|1|
|DRD09-J|Restrict access to sensitive activities|High|Probable|Medium|12|1|
|DRD10-J|Do not release apps that are debuggable|High|Probable|Low|18|1|
|DRD11-J|Ensure that sensitive data is kept secure|High|Probable|Medium|12|1|
|DRD12-J|Do not trust data that is world writable|High|Probable|Medium|12|1|
|DRD13-J|Do not provide addJavascriptInterface method access in a WebView which could contain untrusted content. (API level JELLY_BEAN or beLow)|High|Probable|Medium|12|1|
|DRD14-J|Check that a calling app has appropriate permissions before responding|High|Probable|Medium|12|1|
|DRD15-J|Consider privacy concerns when using Geolocation API|Low|Probable|Medium|4|3|
|DRD16-J|Explicitly define the exported attribute for private components|Medium|Probable|Medium|8|2|
|DRD17-J|Do not use the Android cryptographic security provider encryption default for AES|High|Likely|Medium|18|1|
|DRD18-J|Do not use the default behavior in a cryptographic library if it does not use recommended practices|High|Likely|Medium|18|1|
|DRD19-J|Properly verify server certificate on SSL/TLS|High|Probable|Medium|12|1|
|DRD20-J|Specify permissions when creating files via the NDK|High|Probable|Medium|12|1|
|DRD21-J|Always pass explicit intents to a PendingIntent|Medium|Probable|Medium|8|2|
|ENV00-J|Do not sign code that performs only unprivileged operations|High|Probable|Medium|12|1|
|ENV01-J|Place all security-sensitive code in a single JAR and sign and seal it|High|Probable|Medium|12|1|
|ENV02-J|Do not trust the values of environment variables|Low|likely|Low|9|2|
|ENV03-J|Do not grant dangerous combinations of permissions|High|likely|Low|27|1|
|ENV04-J|Do not disable bytecode verification|High|likely|Low|27|1|
|ENV05-J|Do not deploy an application that can be remotely monitored|High|Probable|Low|18|1|
|ENV06-J|Production code must not contain debugging entry points|High|Probable|Low|18|1|
|ERR00-J|Do not suppress or ignore checked exceptions|Low|Probable|Medium|4|3|
|ERR01-J|Do not allow exceptions to expose sensitive information|Medium|Probable|High|4|3|
|ERR02-J|Prevent exceptions while logging data|Medium|likely|High|6|2|
|ERR03-J|Restore prior object state on method failure|Low|Probable|High|2|3|
|ERR04-J|Do not complete abruptly from a finally block|Low|Probable|Medium|4|3|
|ERR05-J|Do not let checked exceptions escape from a finally block|Low|Unlikely|Medium|2|3|
|ERR06-J|Do not throw undeclared checked exceptions|Low|Unlikely|High|1|3|
|ERR07-J|Do not throw RuntimeException, Exception, or Throwable|Low|likely|Medium|6|2|
|ERR08-J|Do not catch NullPointerException or any of its ancestors|Medium|likely|Medium|12|1|
|ERR09-J|Do not allow untrusted code to terminate the JVM|Low|Unlikely|Medium|2|3|
|EXP00-J|Do not ignore values returned by methods|Medium|Probable|Medium|8|2|
|EXP01-J|Never dereference null pointers|Low|Likely|High|3|3|
|EXP02-J|Use the two-argument Arrays.equals() method to compare the contents of arrays|Low|Likely|Low|9|2|
|EXP03-J|Do not use the equality operators when comparing values of boxed primitives|Low|likely|Medium|6|2|
|EXP04-J|Ensure that autoboxed values have the intended type|Low|Probable|Low|6|2|
|EXP05-J|Do not write more than once to the same variable within an expression|Low|Unlikely|Medium|2|3|
|EXP06-J|Do not use side-effecting expressions in assertions|Low|Unlikely|Low|3|3|
|EXP07-J|Prevent loss of useful data due to weak references|Low|Probable|Medium|4|3|
|FIO00-J|Do not operate on files in shared directories|Medium|Unlikely|Medium|4|3|
|FIO01-J|Create files with appropriate access permissions|Medium|Probable|High|4|3|
|FIO02-J|Detect and handle file-related errors|Medium|Probable|Medium|8|2|
|FIO03-J|Remove temporary files before termination|Medium|Probable|Medium|8|2|
|FIO04-J|Release resources when they are no longer needed|Low|Probable|Medium|4|3|
|FIO05-J|Do not expose buffers created using the wrap() or duplicate() methods to untrusted code|Medium|likely|Low|18|1|
|FIO06-J|Do not create multiple buffered wrappers on a single InputStream|Low|Unlikely|Medium|2|3|
|FIO07-J|Do not let external processes block on IO buffers|Low|Probable|Medium|4|3|
|FIO08-J|Use an int to capture the return value of methods that read a character or byte|High|Probable|Medium|12|1|
|FIO09-J|Do not rely on the write() method to output integers outside the range 0 to 255|Low|Unlikely|Medium|2|3|
|FIO10-J|Ensure the array is filled when using read() to fill an array|Low|Unlikely|Medium|2|3|
|FIO11-J|Do not attempt to read raw binary data as character data|Low|Unlikely|Medium|2|3|
|FIO12-J|Provide methods to read and write little-endian data|Low|Unlikely|Low|3|3|
|FIO13-J|Do not log sensitive information outside a trust boundary|Medium|Probable|High|4|3|
|FIO14-J|Perform proper cleanup at program termination|Medium|likely|Medium|12|1|
|FIO15-J|Do not operate on untrusted file links|Medium|Unlikely|Medium|4|3|
|FIO16-J|Do not reset a servlet's output stream after committing it|Low|Probable|Medium|4|3|
|IDS00-J|Prevent SQL Injection|High|Probable|Medium|12|1|
|IDS01-J|Normalize strings before validating them|High|Probable|Medium|12|1|
|IDS02-J|Canonicalize path names before validating them|Medium|Unlikely|Medium|4|3|
|IDS03-J|Do not log unsanitized user input|Medium|Probable|Medium|8|2|
|IDS04-J|Safely extract files from ZipInputStream|Low|Probable|High|2|3|
|IDS05-J|Use a subset of ASCII for file and path names|Medium|Unlikely|Medium|4|3|
|IDS06-J|Exclude unsanitized user input from format strings|Medium|Unlikely|Medium|4|3|
|IDS07-J|Do not pass untrusted, unsanitized data to the Runtime.exec() method|High|Probable|Medium|12|1|
|IDS08-J|Sanitize untrusted data passed to a regex|Medium|Unlikely|Medium|4|3|
|IDS09-J|Specify an appropriate locale when inspecting locale-dependent data|Medium|Probable|Medium|8|2|
|IDS10-J|Do not split characters between two data structures|Low|Unlikely|Medium|2|3|
|IDS11-J|Eliminate noncharacter code points before validation|High|Probable|Medium|12|1|
|IDS12-J|Perform lossless conversion of String data between differing character encodings|Low|Probable|Medium|4|3|
|IDS13-J|Use compatible encodings on both sides of file or network IO|Low|Unlikely|Medium|2|3|
|IDS14-J|Do not trust the contents of hidden form fields|High|Probable|High|6|2|
|IDS15-J|Do not allow sensitive information to leak outside a trust boundary|Medium|Likely|High|6|2|
|IDS16-J|Prevent XML Injection|High|Probable|Medium|12|1|
|JNI00-J|Define wrappers around native methods|Medium|Probable|High|4|3|
|JNI01-J|Safely invoke standard APIs that perform tasks using the immediate caller's class loader instance (loadLibrary)|High|Likely|Low|27|1|
|JNI02-J|Do not assume object references are constant or unique|Low|Probable|High|2|3|
|JNI03-J|Do not use direct pointers to Java objects in JNI code|High|Probable|Low|18|1|
|JNI04-J|Do not assume that Java strings are null-terminated|Low|Probable|Medium|4|3|
|LCK00-J|Use private final lock objects to synchronize classes that may interact with untrusted code|Low|Probable|Medium|4|3|
|LCK01-J|Do not synchronize on objects that may be reused|Medium|Probable|Medium|8|2|
|LCK02-J|Do not synchronize on the class object returned by getClass()|Medium|Probable|Medium|8|2|
|LCK03-J|Do not synchronize on the intrinsic locks of High-level concurrency objects|Medium|Probable|Medium|8|2|
|LCK04-J|Do not synchronize on a collection view if the backing collection is accessible|Low|Probable|Medium|4|3|
|LCK05-J|Synchronize access to static fields that can be modified by untrusted code|Low|Probable|Medium|4|3|
|LCK06-J|Do not use an instance lock to protect shared static data|Medium|Probable|Medium|8|2|
|LCK07-J|Avoid deadlock by requesting and releasing locks in the same order|Low|Likely|High|3|3|
|LCK08-J|Ensure actively held locks are released on exceptional conditions|Low|likely|Low|9|2|
|LCK09-J|Do not perform operations that can block while holding a lock|Low|Probable|High|2|3|
|LCK10-J|Do not use incorrect forms of the double-checked locking idiom|Low|Probable|Medium|4|3|
|LCK11-J|Avoid client-side locking when using classes that do not commit to their locking strategy|Low|Probable|Medium|4|3|
|MET00-J|Validate method arguments|High|likely|High|9|2|
|MET01-J|Never use assertions to validate method arguments|Medium|Probable|Medium|8|2|
|MET02-J|Do not use deprecated or obsolete classes or methods|Low|Unlikely|Medium|2|3|
|MET03-J|Methods that perform a security check must be declared private or final|Medium|Probable|Medium|8|2|
|MET04-J|Do not increase the accessibility of overridden or hidden methods|Medium|Probable|Medium|8|2|
|MET05-J|Ensure that constructors do not call overridable methods|Medium|Probable|Medium|8|2|
|MET06-J|Do not invoke overridable methods in clone()|Medium|Probable|Low|12|1|
|MET07-J|Never declare a class method that hides a method declared in a superclass or superinterface|Low|Unlikely|Medium|2|3|
|MET08-J|Preserve the equality contract when overriding the equals() method|Low|Unlikely|Medium|2|3|
|MET09-J|Classes that define an equals() method must also define a hashCode() method|Low|Unlikely|High|1|3|
|MET10-J|FolLow the general contract when implementing the compareTo() method|Medium|Unlikely|Medium|4|3|
|MET11-J|Ensure that keys used in comparison operations are immutable|Low|Probable|High|2|3|
|MET12-J|Do not use finalizers|Medium|Probable|Medium|8|2|
|MET13-J|Do not assume that reassigning method arguments modifies the calling environment|Medium|Likely|High|6|2|
|MSC00-J|Use SSLSocket rather than Socket for secure data exchange|Medium|likely|High|6|2|
|MSC01-J|Do not use an empty infinite loop|Low|Unlikely|Medium|2|3|
|MSC02-J|Generate strong random numbers|High|Probable|Medium|12|1|
|MSC03-J|Never hard code sensitive information|High|Probable|Medium|12|1|
|MSC04-J|Do not leak memory|Low|Unlikely|High|1|3|
|MSC05-J|Do not exhaust heap space|Low|Probable|Medium|4|3|
|MSC06-J|Do not modify the underlying collection when an iteration is in progress|Low|Probable|Medium|4|3|
|MSC07-J|Prevent multiple instantiations of singleton objects|Low|Unlikely|Medium|2|3|
|MSC08-J|Do not store non-serializable objects as attributes in an HTTP session|Low|Probable|High|2|3|
|NUM00-J|Detect or prevent integer overfLow|Medium|Unlikely|Medium|4|3|
|NUM01-J|Do not perform bitwise and arithmetic operations on the same data|Medium|Unlikely|Medium|4|3|
|NUM02-J|Ensure that division and remainder operations do not result in divide-by-zero errors|Low|likely|Medium|6|2|
|NUM03-J|Use integer types that can fully represent the possible range of unsigned data|Low|Unlikely|Medium|2|3|
|NUM04-J|Do not use floating-point numbers if precise computation is required|Low|Probable|High|2|3|
|NUM05-J|Do not use denormalized numbers|Low|Probable|High|2|3|
|NUM06-J|Use the strictfp modifier for floating-point calculation consistency across platforms|Low|Unlikely|High|1|3|
|NUM07-J|Do not attempt comparisons with NaN|Low|Probable|Medium|4|3|
|NUM08-J|Check floating-point inputs for exceptional values|Low|Probable|Medium|4|3|
|NUM09-J|Do not use floating-point variables as loop counters|Low|Probable|Low|6|2|
|NUM10-J|Do not construct BigDecimal objects from floating-point literals|Low|Probable|Low|6|2|
|NUM11-J|Do not compare or inspect the string representation of floating-point values|Low|likely|Medium|6|2|
|NUM12-J|Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data|Low|Unlikely|Medium|2|3|
|NUM13-J|Avoid loss of precision when converting primitive integers to floating-point|Low|Unlikely|Medium|2|3|
|NUM14-J|Use shift operators correctly|Low|Probable|Medium|4|3|
|OBJ00-J|Limit extensibility of classes and methods with invariants|Medium|Likely|Medium|12|1|
|OBJ01-J|Declare data members as private and provide accessible wrapper methods|Medium|likely|Medium|12|1|
|OBJ02-J|Preserve dependencies in subclasses when changing superclasses|Medium|Probable|High|4|3|
|OBJ03-J|Prevent heap pollution|Low|Probable|Medium|4|3|
|OBJ04-J|Provide mutable classes with copy functionality to safely allow passing instances to untrusted code|Low|likely|Medium|6|2|
|OBJ05-J|Defensively copy private mutable class members before returning their references|High|Probable|Medium|12|1|
|OBJ06-J|Defensively copy mutable inputs and mutable internal components|Medium|Probable|High|4|3|
|OBJ07-J|Sensitive classes must not let themselves be copied|Medium|Probable|Medium|8|2|
|OBJ08-J|Do not expose private members of an outer class from within a nested class|Medium|Probable|Medium|8|2|
|OBJ09-J|Compare classes and not class names|High|Unlikely|Low|9|2|
|OBJ10-J|Do not use public static nonfinal variables|Medium|Probable|Medium|8|2|
|OBJ11-J|Be wary of letting constructors throw exceptions|High|Probable|Medium|12|1|
|OBJ12-J|Respect object-based annotations|Low|Probable|Medium|4|3|
|OBJ13-J|Ensure that references to mutable objects are not exposed|Medium|Likely|Low|18|1|
|OBJ14-J|Do not use an object that has been freed.|Medium|Likely|High|6|2|
|SEC00-J|Do not allow privileged blocks to leak sensitive information across a trust boundary|Medium|likely|High|6|2|
|SEC01-J|Do not allow tainted variables in privileged blocks|High|likely|Low|27|1|
|SEC02-J|Do not base security checks on untrusted sources|High|Probable|Medium|12|1|
|SEC03-J|Do not load trusted classes after allowing untrusted code to load arbitrary classes|High|Probable|Medium|12|1|
|SEC04-J|Protect sensitive operations with security manager checks|High|Probable|Medium|12|1|
|SEC05-J|Do not use reflection to increase accessibility of classes, methods, or fields|High|Probable|Medium|12|1|
|SEC06-J|Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar|High|Probable|Medium|12|1|
|SEC07-J|Call the superclass's getPermissions() method when writing a custom class loader|High|Probable|Low|18|1|
|SER00-J|Enable serialization compatibility during class evolution|Low|Probable|High|2|3|
|SER01-J|Do not deviate from the proper signatures of serialization methods|High|likely|Low|27|1|
|SER02-J|Sign then seal sensitive objects before sending them outside a trust boundary|Medium|Probable|High|4|3|
|SER03-J|Do not serialize unencrypted, sensitive data|Medium|likely|High|6|2|
|SER04-J|Do not allow serialization and deserialization to bypass the security manager|High|Probable|High|6|2|
|SER05-J|Do not serialize instances of inner classes|Medium|likely|Medium|12|1|
|SER06-J|Make defensive copies of private mutable components during deserialization|Low|Probable|Medium|4|3|
|SER07-J|Do not use the default serialized form for classes with implementation-defined invariants|Medium|Probable|High|4|3|
|SER08-J|Minimize privileges before deserializing from a privileged context|High|likely|Medium|18|1|
|SER09-J|Do not invoke overridable methods from the readObject() method|Low|Probable|Medium|4|3|
|SER10-J|Avoid memory and resource leaks during serialization|Low|Unlikely|Low|3|3|
|SER11-J|Prevent overwriting of externalizable objects|Low|Probable|Low|6|2|
|THI00-J|Do not invoke Thread.run()|Low|Probable|Medium|4|3|
|THI01-J|Do not invoke ThreadGroup methods|Low|Probable|Medium|4|3|
|THI02-J|Notify all waiting threads rather than a single thread|Low|Unlikely|Medium|2|3|
|THI03-J|Always invoke wait() and await() methods inside a loop|Low|Unlikely|Medium|2|3|
|THI04-J|Ensure that threads performing blocking operations can be terminated|Low|Probable|Medium|4|3|
|THI05-J|Do not use Thread.stop() to terminate threads|Low|Probable|Medium|4|3|
|TPS00-J|Use thread pools to enable graceful degradation of service during traffic bursts|Low|Probable|High|2|3|
|TPS01-J|Do not execute interdependent tasks in a bounded thread pool|Low|Probable|Medium|4|3|
|TPS02-J|Ensure that tasks submitted to a thread pool are interruptible|Low|Probable|Medium|4|3|
|TPS03-J|Ensure that tasks executing in a thread pool do not fail silently|Low|Probable|Medium|4|3|
|TPS04-J|Ensure ThreadLocal variables are reinitialized when using thread pools|Medium|Probable|High|4|3|
|TSM00-J|Do not override thread-safe methods with methods that are not thread-safe|Low|Probable|Medium|4|3|
|TSM01-J|Do not let the this reference escape during object construction|Medium|Probable|High|4|3|
|TSM02-J|Do not use background threads during class initialization|Low|Probable|High|2|3|
|TSM03-J|Do not publish partially initialized objects|Medium|Probable|Medium|8|2|
|VNA00-J|Ensure visibility when accessing shared primitive variables|Medium|Probable|Medium|8|2|
|VNA01-J|Ensure visibility of shared references to immutable objects|Low|Probable|Medium|4|3|
|VNA02-J|Ensure that compound operations on shared variables are atomic|Medium|Probable|Medium|8|2|
|VNA03-J|Do not assume that a group of calls to independently atomic methods is atomic|Low|Probable|Medium|4|3|
|VNA04-J|Ensure that calls to chained methods are atomic|Low|Probable|Medium|4|3|
|VNA05-J|Ensure atomicity when reading and writing 64-bit values|Low|Unlikely|Medium|2|3|
|VNA06-J|Do not use non-static member fields in a servlet|Medium|Likely|High|6|3|
