.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2015-05-22" "dos2unix" "2015-05-22"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAAM"
.IX Header "NAAM"
dos2unix \- omzetter van tekstbestandsindelingen, van DOS/Mac naar Unix en
vice versa
.SH "OVERZICHT"
.IX Header "OVERZICHT"
.Vb 2
\&    dos2unix [opties] [BESTAND ...] [\-n INVOERBESTAND UITVOERBESTAND ...]
\&    unix2dos [opties] [BESTAND ...] [\-n INVOERBESTAND UITVOERBESTAND ...]
.Ve
.SH "BESCHRIJVING"
.IX Header "BESCHRIJVING"
Het Dos2unix pakket bevat de toepassingen \f(CW\*(C`dos2unix\*(C'\fR en \f(CW\*(C`unix2dos\*(C'\fR om
platte tekstbestanden in \s-1DOS\-\s0 of Mac-indeling naar Unix-indeling om te
zetten, en vice versa.
.PP
In DOS/Windows\-tekstbestanden bestaat een regeleinde uit een combinatie van
twee tekens: een 'Carriage Return' (\s-1CR\s0) gevolgd door een 'Line Feed' (\s-1LF\s0).
In Unix-tekstbestanden bestaat een regeleinde uit één enkel 'Newline'\-teken,
dat gelijk is aan een \s-1DOS \s0'Line Feed'-teken (\s-1LF\s0).   In Mac-tekstbestanden,
van vóór Mac \s-1OS X,\s0 bestaan regeleindes uit één enkel 'Carriage
Return'-teken.  Mac \s-1OS X\s0 is op Unix gebaseerd en heeft dezelfde regeleindes
als Unix.
.PP
Naast regeleindes kan Dos2unix ook de codering van bestanden converteren.
Enkele DOS-codetabellen kunnen omgezet worden naar Unix Latin\-1.  En Windows
Unicode-bestanden (\s-1UTF\-16\s0) kunnen geconverteerd worden naar Unix
Unicode-bestanden (\s-1UTF\-8\s0).
.PP
Binaire bestanden worden automatisch overgeslagen, behalve als de omzetting
geforceerd wordt.
.PP
Niet-reguliere bestanden, zoals mappen en \s-1FIFO\s0's, worden automatisch
overgeslagen.
.PP
Symbolische koppelingen en hun doelen blijven standaard onaangeroerd.
Optioneel kunnen symbolische koppelingen worden vervangen, of de uitvoer kan
naar het doel van de symbolische koppeling worden geschreven.  Op Windows
wordt het schrijven naar het doel van een symbolische koppeling niet
ondersteund.
.PP
Dos2unix is gemodelleerd naar dos2unix op SunOS/Solaris, maar er is één
belangrijk verschil: deze versie van dos2unix voert standaard een
vervangende conversie uit (oud-bestand-modus) terwijl de oorspronkelijke
SunOS/Solaris\-versie alleen de gepaarde conversie (nieuw-bestand-modus)
kent.  Zie ook de opties \f(CW\*(C`\-o\*(C'\fR en \f(CW\*(C`\-n\*(C'\fR.
.SH "OPTIES"
.IX Header "OPTIES"
.IP "\fB\-\-\fR" 4
.IX Item "--"
Alle volgende opties als bestandsnamen behandelen.  Gebruik deze optie als u
een bestand wilt converteren waarvan de naam met een streepje begint.
Bijvoorbeeld, om een bestand genaamd \*(L"\-foo\*(R" om te zetten, gebruikt u de
volgende opdracht:
.Sp
.Vb 1
\&    dos2unix \-\- \-foo
.Ve
.Sp
Of in nieuw-bestand-modus:
.Sp
.Vb 1
\&    dos2unix \-n \-\- \-foo uit.txt
.Ve
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
Alleen regeleindes converteren.  Dit is de standaardconversiemodus.
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
Conversie tussen de tekensets \s-1DOS\s0 en \s-1ISO\-8859\-1. \s0 Zie ook de sectie
\&\fB\s-1CONVERSIEMODI\s0\fR.
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
Windows-codetabel 1252 (West-Europees) gebruiken.
.IP "\fB\-437\fR" 4
.IX Item "-437"
DOS-codetabel 437 (\s-1VS\s0) gebruiken.  Dit is de standaard codetabel die
gebruikt wordt bij ISO-conversie.
.IP "\fB\-850\fR" 4
.IX Item "-850"
DOS-codetabel 850 (West-Europees) gebruiken.
.IP "\fB\-860\fR" 4
.IX Item "-860"
DOS-codetabel 860 (Portugees) gebruiken.
.IP "\fB\-863\fR" 4
.IX Item "-863"
DOS-codetabel 863 (Canadees Frans) gebruiken.
.IP "\fB\-865\fR" 4
.IX Item "-865"
DOS-codetabel 865 (Scandinavisch) gebruiken.
.IP "\fB\-7\fR" 4
.IX Item "-7"
Lettertekens met het achtste bit gezet converteren naar spaties.
.IP "\fB\-b\fR, \fB\-\-keep\-bom\fR" 4
.IX Item "-b, --keep-bom"
Een Byte-Order-Mark (\s-1BOM\s0) behouden.  Als het invoerbestand een \s-1BOM\s0 bevat,
dan wordt ook een \s-1BOM\s0 naar het uitvoerbestand geschreven.  Dit is het
standaardgedrag bij conversie naar \s-1DOS. \s0 Zie ook optie \f(CW\*(C`\-r\*(C'\fR.
.IP "\fB\-c\fR, \fB\-\-convmode \s-1CONVERSIEMODUS\s0\fR" 4
.IX Item "-c, --convmode CONVERSIEMODUS"
De te gebruiken conversiemodus.  \s-1CONVERSIEMODUS\s0 kan zijn: \fIascii\fR, \fI7bit\fR,
\&\fIiso\fR, of \fImac\fR, waarbij ascii de standaardinstelling is.
.IP "\fB\-f\fR, \fB\-\-force\fR" 4
.IX Item "-f, --force"
Conversie van binaire bestanden afdwingen.
.IP "\fB\-gb\fR, \fB\-\-gb18030\fR" 4
.IX Item "-gb, --gb18030"
Op Windows worden UTF\-16\-bestanden standaard naar \s-1UTF\-8\s0 geconverteerd,
ongeacht de ingestelde taalregio.  Gebruik deze optie om UTF\-16\-bestanden
naar \s-1GB18030\s0 te converteren.  Deze optie is alleen beschikbaar op Windows.
Zie ook de sectie \fB\s-1GB18030\s0\fR.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Een hulptekst tonen.
.IP "\fB\-i\fR[\fB\s-1VLAGGEN\s0\fR], \fB\-\-info\fR[\fB=VLAGGEN\fR] \fB\s-1BESTAND\s0\fR..." 4
.IX Item "-i[VLAGGEN], --info[=VLAGGEN] BESTAND..."
Bestandsinformatie tonen.  Er wordt niets geconverteerd.
.Sp
De volgende informatie wordt weergegeven, in deze volgorde: het aantal
DOS-regeleindes, het aantal Unix-regeleindes, het aantal Mac-regeleindes, de
Byte-Order-Mark, of het een tekst\- of binair bestand is, en de bestandsnaam.
.Sp
Voorbeelduitvoer:
.Sp
.Vb 8
\&     6       0       0  no_bom    text    dos.txt
\&     0       6       0  no_bom    text    unix.txt
\&     0       0       6  no_bom    text    mac.txt
\&     6       6       6  no_bom    text    mixed.txt
\&    50       0       0  UTF\-16LE  text    utf16le.txt
\&     0      50       0  no_bom    text    utf8unix.txt
\&    50       0       0  UTF\-8     text    utf8dos.txt
\&     2     418     219  no_bom    binary  dos2unix.exe
.Ve
.Sp
Bij de optie kunnen één of meer vlaggen meegegeven worden om de uitvoer te
beperken.
.RS 4
.IP "\fBd\fR" 4
.IX Item "d"
Het aantal DOS-regeleindes tonen.
.IP "\fBu\fR" 4
.IX Item "u"
Het aantal Unix-regeleindes tonen.
.IP "\fBm\fR" 4
.IX Item "m"
Het aantal Mac-regeleindes tonen.
.IP "\fBb\fR" 4
.IX Item "b"
De Byte-Order-Mark tonen.
.IP "\fBt\fR" 4
.IX Item "t"
Tonen of het bestand tekst is of binair.
.IP "\fBc\fR" 4
.IX Item "c"
Alleen de namen tonen van de bestanden die geconverteerd zouden worden.
.Sp
Met de vlag \f(CW\*(C`c\*(C'\fR toont dos2unix alleen de bestanden die DOS-regeleindes
bevatten, en unix2dos alleen de bestanden die Unix-regeleindes bevatten.
.RE
.RS 4
.Sp
Voorbeelden:
.Sp
Informatie weergeven voor alle bestanden met de extensie 'txt':
.Sp
.Vb 1
\&    dos2unix \-i *.txt
.Ve
.Sp
Alleen de aantallen DOS-regeleindes en Unix-regeleindes tonen:
.Sp
.Vb 1
\&    dos2unix \-idu *.txt
.Ve
.Sp
Alleen de Byte-Order-Mark tonen:
.Sp
.Vb 1
\&    dos2unix \-\-info=b *.txt
.Ve
.Sp
De bestanden opsommen die DOS-regeleindes bevatten:
.Sp
.Vb 1
\&    dos2unix \-ic *.txt
.Ve
.Sp
De bestanden opsommen die Unix-regeleindes bevatten:
.Sp
.Vb 1
\&    unix2dos \-ic *.txt
.Ve
.RE
.IP "\fB\-k\fR, \fB\-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
Het tijdsstempel van het invoerbestand behouden voor het uitvoerbestand.
.IP "\fB\-L\fR, \fB\-\-license\fR" 4
.IX Item "-L, --license"
De softwarelicentie tonen.
.IP "\fB\-l\fR, \fB\-\-newline\fR" 4
.IX Item "-l, --newline"
Een extra regeleinde toevoegen.
.Sp
\&\fBdos2unix\fR: Alleen DOS-regeleindes worden omgezet naar twee
Unix-regeleindes.  In Mac-modus worden alleen Mac-regeleindes omgezet naar
twee Unix-regeleindes.
.Sp
\&\fBunix2dos\fR: Alleen Unix-regeleindes worden omgezet naar twee
DOS-regeleindes.  In Mac-modus worden Unix-regeleindes omgezet naar twee
Mac-regeleindes.
.IP "\fB\-m\fR, \fB\-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
Een Byte-Order-Mark (\s-1BOM\s0) naar het uitvoerbestand schrijven.  Standaard
wordt een \s-1UTF\-8\-BOM\s0 geschreven.
.Sp
Als het invoerbestand in \s-1UTF\-16\s0 is, en de optie \f(CW\*(C`\-u\*(C'\fR is gegeven, dan wordt
een \s-1UTF\-16\-BOM\s0 geschreven.
.Sp
Gebruik deze optie nooit als de codering van het uitvoerbestand niet \s-1UTF\-8,
UTF\-16,\s0 of \s-1GB18030\s0 is.  Zie ook de sectie \fB\s-1UNICODE\s0\fR.
.IP "\fB\-n\fR, \fB\-\-newfile \s-1INVOERBESTAND UITVOERBESTAND\s0\fR ..." 4
.IX Item "-n, --newfile INVOERBESTAND UITVOERBESTAND ..."
Nieuw-bestand-modus.  Het bestand \s-1INVOERBESTAND\s0 converteren en naar bestand
\&\s-1UITVOERBESTAND\s0 schrijven. Bestandsnamen moeten opgegeven worden in paren.
Jokertekens moeten \fIniet\fRgebruikt worden, anders \fIverlies\fR je de
bestanden.
.Sp
De gebruiker die de conversie start in nieuw-bestand (gepaarde) modus wordt
de eigenaar van het geconverteerde bestand.  De lees/schrijf\-toegangsrechten
van het nieuwe bestand worden de toegangsrechten van het originele bestand
minus de \fIumask\fR\|(1) van de gebruiker die de conversie draait.
.IP "\fB\-o\fR, \fB\-\-oldfile \s-1BESTAND\s0\fR ..." 4
.IX Item "-o, --oldfile BESTAND ..."
Oud-bestand-modus.  Het bestand \s-1BESTAND\s0 converteren en overschrijven.  Dit
is de standaard modus.  Jokertekens kunnen gebruikt worden.
.Sp
In oud-bestand (vervangende) modus krijgt het geconverteerde bestand
dezelfde eigenaar, groep en lees/schrijf\-rechten als het originele bestand.
Ook wanneer het bestand wordt omgezet door een andere gebruiker die
schrijfrechten heeft op het bestand (b.v. gebruiker root).  De omzetting
wordt afgebroken wanneer het niet mogelijk is de originele waardes te
behouden.  Verandering van eigenaar kan betekenen dat de originele eigenaar
het bestand niet meer kan lezen.  Verandering van groep zou een
veiligheidsrisico kunnen zijn, het bestand zou leesbaar kunnen worden voor
personen voor wie het niet bestemd is.  Behoud van eigenaar, groep en
lees/schrijf\-rechten wordt alleen ondersteund op Unix.
.IP "\fB\-q\fR, \fB\-\-quiet\fR" 4
.IX Item "-q, --quiet"
Stille werking.  Alle waarschuwingen onderdrukken.  De aflsuitwaarde is nul,
behalve wanneer verkeerde opties worden gegeven.
.IP "\fB\-r\fR, \fB\-\-remove\-bom\fR" 4
.IX Item "-r, --remove-bom"
Een Byte-Order-Mark (\s-1BOM\s0) verwijderen.  Er wordt geen \s-1BOM\s0 naar het
uitvoerbestand geschreven.  Dit is het standaardgedrag bij conversie naar
Unix.  Zie ook optie \f(CW\*(C`\-b\*(C'\fR.
.IP "\fB\-s\fR, \fB\-\-safe\fR" 4
.IX Item "-s, --safe"
Binaire bestanden overslaan (standaard).
.IP "\fB\-u\fR, \fB\-\-keep\-utf16\fR" 4
.IX Item "-u, --keep-utf16"
De originele UTF\-16\-codering van het invoerbestand behouden.  Het
uitvoerbestand wordt in dezelfde UTF\-16\-codering (little endian of big
endian) geschreven als het invoerbestand.  Dit voorkomt conversie naar
\&\s-1UTF\-8. \s0 Er wordt ook een corresponderende \s-1UTF\-16\-BOM\s0 geschreven.  Deze optie
kan uitgeschakeld worden met de optie \f(CW\*(C`\-ascii\*(C'\fR.
.IP "\fB\-ul\fR, \fB\-\-assume\-utf16le\fR" 4
.IX Item "-ul, --assume-utf16le"
Veronderstellen dat de indeling van het invoerbestand \s-1UTF\-16LE\s0 is.
.Sp
Wanneer het invoerbestand een Byte-Order-Mark (\s-1BOM\s0) bevat, dan gaat deze \s-1BOM\s0
vóór deze optie.
.Sp
Wanneer een verkeerde aanname is gemaakt (het invoerbestand was geen
\&\s-1UTF\-16LE\s0) en de conversie verliep met succes, dan krijgt u een UTF\-8\-bestand
met verkeerde tekst.  De verkeerde conversie kan ongedaan worden gemaakt
door met \fIiconv\fR\|(1) het UTF\-8\-uitvoerbestand terug om te zetten naar
\&\s-1UTF\-16LE. \s0 Dit zal het originele bestand terug brengen.
.Sp
De aanname van \s-1UTF\-16LE\s0 werkt als een \fIconversiemodus\fR.  Door de
standaardmodus \fIascii\fR in te schakelen wordt de UTF\-16LE\-veronderstelling
uitgeschakeld.
.IP "\fB\-ub\fR, \fB\-\-assume\-utf16be\fR" 4
.IX Item "-ub, --assume-utf16be"
Veronderstellen dat de indeling van het invoerbestand \s-1UTF\-16BE\s0 is.
.Sp
Deze optie werkt hetzelfde als optie \f(CW\*(C`\-ul\*(C'\fR.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Extra meldingen weergeven.  Er wordt extra informatie getoond over
Byte-Order-Marks en het aantal geconverteerde regeleindes.
.IP "\fB\-F\fR, \fB\-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
Symbolische koppelingen volgen en de doelen converteren.
.IP "\fB\-R\fR, \fB\-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
Symbolische koppelingen vervangen door geconverteerde bestanden (de
originele doelbestanden blijven ongewijzigd).
.IP "\fB\-S\fR, \fB\-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
Symbolische koppelingen en doelen ongewijzigd laten (standaard).
.IP "\fB\-V\fR, \fB\-\-version\fR" 4
.IX Item "-V, --version"
Versie-informatie tonen.
.SH "MAC-MODUS"
.IX Header "MAC-MODUS"
In normale modus worden DOS-regeleindes naar Unix omgezet en vice versa.
Mac-regeleindes worden niet omgezet.
.PP
In Mac-modus worden Mac-regeleindes naar Unix omgezet en vice versa.
DOS-regeleindes blijven ongewijzigd.
.PP
Om in Mac-modus te draaien kunt u de opdrachtregeloptie \f(CW\*(C`\-c mac\*(C'\fR gebruiken,
of de opdrachten \f(CW\*(C`mac2unix\*(C'\fR of \f(CW\*(C`unix2mac\*(C'\fR.
.SH "CONVERSIEMODI"
.IX Header "CONVERSIEMODI"
.IP "\fBascii\fR" 4
.IX Item "ascii"
In modus \f(CW\*(C`ascii\*(C'\fR worden alleen regeleindes omgezet.  Dit is de
standaardmodus.
.Sp
Hoewel de naam van deze modus \s-1ASCII\s0 is, wat een 7\-bits standaard is, is de
werkelijke modus 8\-bits.  Gebruik altijd deze modus wanneer u Unicode
UTF\-8\-bestanden omzet.
.IP "\fB7bit\fR" 4
.IX Item "7bit"
Alle 8\-bits niet-ASCII lettertekens (met waardes van 128 t/m 255) worden
omgezet naar een 7\-bits spatie.
.IP "\fBiso\fR" 4
.IX Item "iso"
Tekens worden omgezet tussen een DOS-tekenset (codetabel) en de ISO-tekenset
\&\s-1ISO\-8859\-1 \s0(Latin\-1) op Unix.  DOS-tekens zonder een ISO\-8859\-1\-equivalent,
waarvoor dus geen omzetting mogelijk is, worden omgezet in een punt.
Hetzelfde geldt voor ISO\-8859\-1\-tekens zonder DOS-tegenhanger.
.Sp
Wanneer alleen optie \f(CW\*(C`\-iso\*(C'\fR gebruikt wordt, zal dos2unix proberen de
actieve codetabel te gebruiken.  Als dat niet mogelijk is wordt codetabel
\&\s-1CP437\s0 gebruikt, die vooral in de \s-1VS\s0 gebruikt wordt.  Om een bepaalde
codetabel te forceren, kunt u de opties \f(CW\*(C`\-850\*(C'\fR (West-Europees), \f(CW\*(C`\-860\*(C'\fR
(Portugees), \f(CW\*(C`\-863\*(C'\fR (Canadees Frans) of \f(CW\*(C`\-865\*(C'\fR (Scandinavisch) gebruiken.
Windows-codetabel \s-1CP1252 \s0(West-Europees) wordt ook ondersteund met optie
\&\f(CW\*(C`\-1252\*(C'\fR.  Gebruik voor andere codetabellen dos2unix in combinatie met
\&\fIiconv\fR\|(1).  Iconv kan omzetten tussen een lange lijst tekensetcoderingen.
.Sp
Gebruik ISO-conversie nooit op Unicode-tekstbestanden.  Het zal
UTF\-8\-gecodeerde bestanden beschadigen.
.Sp
Enkele voorbeelden:
.Sp
Omzetten van de standaard DOS-codetabel naar Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-iso \-n in.txt uit.txt
.Ve
.Sp
Omzetten van \s-1DOS CP850\s0 naar Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-850 \-n in.txt uit.txt
.Ve
.Sp
Omzetten van Windows \s-1CP1252\s0 naar Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-1252 \-n in.txt uit.txt
.Ve
.Sp
Omzetten van Windows \s-1CP1252\s0 naar Unix \s-1UTF\-8 \s0(Unicode):
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 in.txt | dos2unix > uit.txt
.Ve
.Sp
Omzetten van Unix Latin\-1 naar de standaard DOS-codetabel:
.Sp
.Vb 1
\&    unix2dos \-iso \-n in.txt uit.txt
.Ve
.Sp
Omzetten van Unix Latin\-1 naar \s-1DOS CP850:\s0
.Sp
.Vb 1
\&    unix2dos \-850 \-n in.txt uit.txt
.Ve
.Sp
Omzetten van Unix Latin\-1 naar Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos \-1252 \-n in.txt uit.txt
.Ve
.Sp
Omzetten van Unix \s-1UTF\-8 \s0(Unicode) naar Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t CP1252 > uit.txt
.Ve
.Sp
Zie ook <http://czyborra.com/charsets/codepages.html> en
<http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.SS "Coderingen"
.IX Subsection "Coderingen"
Er bestaan verschillende Unicode-coderingen.  Op Unix en Linux zijn
Unicode-bestanden typisch gecodeerd in \s-1UTF\-8. \s0 Op Windows kunnen
Unicode-tekstbestanden gecodeerd zijn in \s-1UTF\-8, UTF\-16\s0 of \s-1UTF\-16\s0 big endian,
maar ze zijn meestal gecodeerd in \s-1UTF\-16.\s0
.SS "Conversie"
.IX Subsection "Conversie"
Unicode-tekstbestanden kunnen \s-1DOS\-,\s0 Unix\- of Mac-regeleindes hebben, net als
reguliere tekstbestanden.
.PP
Alle versies van dos2unix en unix2dos kunnen UTF\-8\-gecodeerde bestanden
omzetten, want \s-1UTF\-8\s0 is ontworpen op compatibiliteit met \s-1ASCII.\s0
.PP
Dos2unix en unix2dos met Unicode UTF\-16\-ondersteuning kunnen little en big
endian UTF\-16\-gecodeerde tekstbestanden lezen.  Om er achter te komen of
dos2unix gebouwd is met \s-1UTF\-16\-\s0 ondersteuning, typt u \f(CW\*(C`dos2unix \-V\*(C'\fR.
.PP
Op Unix/Linux worden UTF\-16\-bestanden geconverteerd naar de codering van de
ingestelde taalregio.  Gebruik de opdracht \fBlocale\fR(1) om te zien wat de
ingestelde codering is.  Wanneer conversie niet mogelijk is, treedt er een
fout op en wordt het bestand overgeslagen.
.PP
Op Windows worden UTF\-16\-bestanden standaard naar \s-1UTF\-8\s0 geconverteerd.
UTF\-8\-tekstbestanden worden alom goed ondersteund, zowel op Windows als
Unix/Linux.
.PP
De \s-1UTF\-16\-\s0 en UTF\-8\-coderingen zijn volledig compatibel, er gaat bij het
converteren niets verloren.  Als er tijdens de conversie van \s-1UTF\-16\s0 naar
\&\s-1UTF\-8\s0 een fout optreedt, bijvoorbeeld omdat het UTF\-16\-invoerbestand een
fout bevat, dan wordt het bestand overgeslagen.
.PP
Wanneer \f(CW\*(C`\-u\*(C'\fR gebruikt wordt, wordt het uitvoerbestand in dezelfde
UTF\-16\-codering geschreven als het invoerbestand. Optie \f(CW\*(C`\-u\*(C'\fR voorkomt
conversie naar \s-1UTF\-8.\s0
.PP
Dos2unix en unix2dos hebben geen optie om van \s-1UTF\-8\s0 naar \s-1UTF\-16\s0 te
converteren.
.PP
\&\s-1ISO\-\s0 en 7\-bits\-conversie werken niet op UTF\-16\-bestanden.
.SS "Byte-Order-Mark"
.IX Subsection "Byte-Order-Mark"
Op Windows bevatten Unicode-tekstbestanden gewoonlijk een Byte-Order-Mark
(\s-1BOM\s0), omdat veel Windows-programma's (inclusief Kladblok) standaard een \s-1BOM\s0
toevoegen.  Zie ook <http://en.wikipedia.org/wiki/Byte_order_mark>.
.PP
Op Unix hebben Unicode-tekstbestanden meestal geen \s-1BOM. \s0 Er wordt aangenomen
dat de codering van tekstbestanden gelijk is aan de tekencodering van de
ingestelde taalregio.
.PP
Dos2unix kan alleen detecteren of een bestand in UTF\-16\-codering is als het
bestand een \s-1BOM\s0 bevat.  Wanneer een UTF\-16\-bestand geen \s-1BOM\s0 heeft, ziet
dos2unix het bestand als een binair bestand.
.PP
Gebruik optie \f(CW\*(C`\-ul\*(C'\fR of \f(CW\*(C`\-ub\*(C'\fR om een UTF\-16\-bestand zonder \s-1BOM\s0 om te
zetten.
.PP
Dos2unix schrijft standaard geen \s-1BOM\s0 in het uitvoerbestand.  Met optie \f(CW\*(C`\-b\*(C'\fR
schrijft dos2unix een \s-1BOM\s0 wanneer het invoerbestand een \s-1BOM\s0 bevat.
.PP
Unix2dos schrijft standaard een \s-1BOM\s0 in het uitvoerbestand wanneer het
invoerbestand een \s-1BOM\s0 bevat.  Gebruik optie \f(CW\*(C`\-r\*(C'\fR om de \s-1BOM\s0 te verwijderen.
.PP
Dos2unix en unix2dos schrijven altijd een \s-1BOM\s0 wanneer optie \f(CW\*(C`\-m\*(C'\fR gebruikt
wordt.
.SS "Unicode-voorbeelden"
.IX Subsection "Unicode-voorbeelden"
Omzetten van Windows \s-1UTF\-16 \s0(met \s-1BOM\s0) naar Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-n in.txt uit.txt
.Ve
.PP
Omzetten van Windows \s-1UTF\-16LE \s0(zonder \s-1BOM\s0) naar Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-ul \-n in.txt uit.txt
.Ve
.PP
Omzetten van Unix \s-1UTF\-8\s0 naar Windows \s-1UTF\-8\s0 met \s-1BOM:\s0
.PP
.Vb 1
\&    unix2dos \-m \-n in.txt uit.txt
.Ve
.PP
Omzetten van Unix \s-1UTF\-8\s0 naar Windows \s-1UTF\-16:\s0
.PP
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t UTF\-16 > uit.txt
.Ve
.SH "GB18030"
.IX Header "GB18030"
\&\s-1GB18030\s0 is een standaard van de Chinese overheid.  Een subset van de
GB18030\-standaard is officieel verplicht voor alle softwareproducten die in
China verkocht worden.  Zie ook <http://en.wikipedia.org/wiki/GB_18030>.
.PP
\&\s-1GB18030\s0 is volledig compatibel met Unicode, en kan als een
Unicodetransformatie beschouwd worden.  Net als \s-1UTF\-8\s0 is \s-1GB18030\s0 compatibel
met \s-1ASCII.  GB18030\s0 is ook compatibel met Windows-codetabel 936 (ook wel \s-1GBK\s0
genoemd).
.PP
Op Unix/Linux worden UTF\-16\-bestanden naar \s-1GB18030\s0 geconverteerd wanneer de
taalregio-codering \s-1GB18030\s0 is.  Merk op dat dit alleen werkt als deze
taalregio-instelling door het systeem ondersteund wordt.  Gebruik het
commando \f(CW\*(C`locale \-a\*(C'\fR voor een overzicht van de beschikbare taalregio's.
.PP
Op Windows dient u de optie \f(CW\*(C`\-gb\*(C'\fR te gebruiken om UTF\-16\-bestanden naar
\&\s-1GB18030\s0 te converteren.
.PP
GB18030\-bestanden kunnen een Byte-Order-Mark bevatten, net als
Unicode-bestanden.
.SH "VOORBEELDEN"
.IX Header "VOORBEELDEN"
Invoer lezen van standaardinvoer en uitvoer schrijven naar standaarduitvoer:
.PP
.Vb 2
\&    dos2unix
\&    dos2unix \-l \-c mac
.Ve
.PP
Omzetten en vervangen van a.txt; omzetten en vervangen van b.txt:
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
Omzetten en vervangen van a.txt in ascii-conversiemodus:
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Omzetten en vervangen van a.txt in ascii-conversiemodus; omzetten en
vervangen van b.txt in 7\-bits conversiemodus:
.PP
.Vb 3
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
\&    dos2unix \-ascii a.txt \-7 b.txt
.Ve
.PP
Omzetten van a.txt van Mac\- naar Unix-indeling:
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Omzetten van a.txt van Unix\- naar Mac-indeling:
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Omzetten en vervangen van a.txt met behoud van origineel tijdsstempel:
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
Omzetten van a.txt en resultaat naar e.txt schrijven:
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
Omzetten van a.txt en naar e.txt schrijven, met tijdsstempel van e.txt
gelijk aan die van a.txt:
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
Omzetten en vervangen van a.txt; omzetten van b.txt en naar e.txt schrijven:
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
Omzetten van c.txt en naar e.txt schrijven; omzetten en vervangen van a.txt;
omzetten en vervangen van b.txt; omzetten van d.txt en naar f.txt schrijven.
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "RECURSIEVE CONVERSIE"
.IX Header "RECURSIEVE CONVERSIE"
Gebruik dos2unix in combinatie met de opdrachten \fBfind\fR(1) en \fBxargs\fR(1)
om tekstbestanden in een mappenboom recursief om te zetten.  Bijvoorbeeld om
alle .txt\-bestanden in de mappenboom onder de huidige map te converteren,
typt u:
.PP
.Vb 1
\&    find . \-name *.txt |xargs dos2unix
.Ve
.SH "LOKALISATIE"
.IX Header "LOKALISATIE"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
De primaire taal wordt geselecteerd via de omgevingsvariabele \s-1LANG. \s0 De
variabele \s-1LANG\s0 bestaat uit verschillende onderdelen.  Het eerste deel is in
kleine letters de taalcode.  Het tweede deel is optioneel en is de landcode
in hoofdletters, voorafgegaan door een liggend streepje.  Er is ook een
optioneel derde deel: de tekencodering, voorafgegaan door een punt.  Enkele
voorbeelden voor een POSIX-shell:
.Sp
.Vb 7
\&    export LANG=nl               Nederlands
\&    export LANG=nl_NL            Nederlands, Nederland
\&    export LANG=nl_BE            Nederlands, België
\&    export LANG=es_ES            Spaans, Spanje
\&    export LANG=es_MX            Spaans, Mexico
\&    export LANG=en_US.iso88591   Engels, VS, Latin\-1\-codering
\&    export LANG=en_GB.UTF\-8      Engels, GB, UTF\-8\-codering
.Ve
.Sp
Voor een complete lijst van taal\- en landcodes zie de gettext-handleiding:
<http://www.gnu.org/software/gettext/manual/html_node/Usual\-Language\-Codes.html>
.Sp
Op Unix-systemen kunt u de opdracht \fBlocale\fR(1) gebruiken om specifieke
taalregio-informatie te verkrijgen.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
Met de omgevingsvariabele \s-1LANGUAGE\s0 kunt u een prioriteitenlijst specificeren
van talen, gescheiden door dubbele punten.  Dos2unix geeft voorrang aan
\&\s-1LANGUAGE\s0 boven \s-1LANG. \s0 Bijvoorbeeld, eerst Nederlands en dan Duits:
\&\f(CW\*(C`LANGUAGE=nl:de\*(C'\fR.  U moet eerst lokalisatie in werking stellen, door het
instellen van \s-1LANG \s0(of \s-1LC_ALL\s0) op een waarde ongelijk aan \*(L"C\*(R", voordat u een
talen-prioriteitenlijst kunt gebruiken via de variabele \s-1LANGUAGE. \s0 Zie ook
de gettext-handleiding:
<http://www.gnu.org/software/gettext/manual/html_node/The\-LANGUAGE\-variable.html>
.Sp
Als u een taal kiest die niet beschikbaar is, worden de standaard Engelse
berichten gebruikt.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Met de omgevingsvariabele \s-1DOS2UNIX_LOCALEDIR\s0 kan de \s-1LOCALEDIR\s0 die ingesteld
werd tijdens compilatie worden overstemd.  \s-1LOCALEDIR\s0 wordt gebruikt om de
taalbestanden te vinden.  De \s-1GNU\s0 standaardwaarde is
\&\f(CW\*(C`/usr/local/share/locale\*(C'\fR.  De optie \fB\-\-version\fR laat de gebruikte
\&\s-1LOCALEDIR\s0 zien.
.Sp
Voorbeeld (POSIX-shell):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "AFSLUITWAARDE"
.IX Header "AFSLUITWAARDE"
Bij succes wordt nul teruggegeven.  Wanneer een systeemfout optreedt wordt
het laatste systeemfoutnummer teruggegeven.  Bij andere fouten wordt 1
teruggegeven.
.PP
De afsluitwaarde is altijd nul in de stillewerkingsmodus, behalve wanneer
verkeerde opties worden gegeven.
.SH "STANDAARDEN"
.IX Header "STANDAARDEN"
<http://nl.wikipedia.org/wiki/Tekstbestand>
.PP
<http://nl.wikipedia.org/wiki/Carriage_Return>
.PP
<http://nl.wikipedia.org/wiki/Linefeed>
.PP
<http://nl.wikipedia.org/wiki/Unicode>
.SH "AUTEURS"
.IX Header "AUTEURS"
Benjamin Lin \- <blin@socs.uts.edu.au>, Bernd Johannes Wuebben
(mac2unix\-modus) \- <wuebben@kde.org>, Christian Wurll (toevoegen van extra
regeleindes) \- <wurll@ira.uka.de>, Erwin Waterlander \- <waterlan@xs4all.nl>
(beheerder)
.PP
Projectpagina: <http://waterlan.home.xs4all.nl/dos2unix.html>
.PP
SourceForge-pagina: <http://sourceforge.net/projects/dos2unix/>
.SH "ZIE OOK"
.IX Header "ZIE OOK"
\&\fIfile\fR\|(1)  \fIfind\fR\|(1)  \fIiconv\fR\|(1)  \fIlocale\fR\|(1)  \fIxargs\fR\|(1)
