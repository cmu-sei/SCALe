.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2015-05-22" "dos2unix" "2015-05-22"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOM"
.IX Header "NOM"
dos2unix \- Convertit les fichiers textes du format DOS/Mac vers Unix et
inversement
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    dos2unix [options] [FICHIER …] [\-n FICHIER_ENTRÉE FICHIER_SORTIE …]
\&    unix2dos [options] [FICHIER …] [\-n FICHIER_ENTRÉE FICHIER_SORTIE …]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Le package Dos2unix inclut les utilitaires \f(CW\*(C`dos2unix\*(C'\fR et \f(CW\*(C`unix2dos\*(C'\fR pour
convertir des fichiers textes au format \s-1DOS\s0 ou Mac vers le format Unix et
inversement.
.PP
Dans les fichiers textes DOS/Windows, un saut de ligne est une combinaison
de deux caractères: un retour de chariot (\s-1CR\s0) suivi d'un saut de ligne
(\s-1LF\s0). Dans les fichiers textes Unix, le saut de ligne est un seul caractère:
le saut de ligne (\s-1LF\s0). Les fichiers textes Mac, avant Mac \s-1OS X,\s0 utilisaient
le retour chariot (\s-1CR\s0) comme seul caractère. De nos jours, Mac \s-1OS\s0 utilise le
même style de saut de ligne que Unix (\s-1LF\s0).
.PP
Outre les sauts de lignes, Dos2unix convertit aussi le codage des
fichiers. Quelques codes page \s-1DOS\s0 peuvent être convertis en Latin\-1 sous
Unix. L'Unicode des fichiers Windows (\s-1UTF\-16\s0) peut être converti en Unicode
Unix (\s-1UTF\-8\s0).
.PP
Les fichiers binaires sont automatiquement ignorés à moins que la conversion
soit forcée.
.PP
Les fichiers non réguliers tels que les répertoires et les FIFOs sont
automatiquement ignorés.
.PP
Les liens symboliques et leur cible sont, par défaut, inchangés. En option,
les liens symboliques peuvent être remplacés ou, au choix, la sortie peut
être écrite dans la cible du lien symbolique. Écrire dans la cible d'un lien
symbolique n'est pas supporté sous Windows.
.PP
Dos2unix a été conçu comme dos2unix sous SunOS/Solaris. Il y a une
différence importante avec la version originale de SunOS/Solaris. Cette
version effectue les conversions en place (ancien mode de fichiers) tandis
que la version originale de SunOS/Solaris ne supporte que la conversion par
paire (nouveau mode de fichier). Voyez aussi les options \f(CW\*(C`\-o\*(C'\fR et \f(CW\*(C`\-n\*(C'\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-\fR" 4
.IX Item "--"
Traites toutes les options à sa suite comme étant des noms de
fichiers. Utilisez cette option si vous voulez convertir des fichiers dont
le nom commence par un tiret. Par exemple, pour convertir un fichier nommé
« \-foo », vous pouvez utiliser cette commande:
.Sp
.Vb 1
\&    dos2unix \-\- \-foo
.Ve
.Sp
Ou dans le style des nouveaux fichiers:
.Sp
.Vb 1
\&    dos2unix \-n \-\- \-foo sortie.txt
.Ve
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
Convertit uniquement les sauts de lignes. C'est le mode de conversion par
défaut.
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
Convertit le jeu de caractères du \s-1DOS\s0 vers \s-1ISO\-8859\-1.\s0 Voyez aussi la
section des \s-1MODES DE CONVERSION.\s0
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
Utilise le code page 1252 de Windows (Europe de l'ouest).
.IP "\fB\-437\fR" 4
.IX Item "-437"
Utilise le code page 437 du \s-1DOS \s0(\s-1US\s0). C'est le code page par défaut pour les
conversions \s-1ISO.\s0
.IP "\fB\-850\fR" 4
.IX Item "-850"
Utilise le code page 850 du \s-1DOS \s0(Europe de l'ouest).
.IP "\fB\-860\fR" 4
.IX Item "-860"
Utilise le code page 860 du \s-1DOS \s0(portugais).
.IP "\fB\-863\fR" 4
.IX Item "-863"
Utilise le code page 863 du \s-1DOS \s0(français canadien).
.IP "\fB\-865\fR" 4
.IX Item "-865"
Utilise le code page 865 du \s-1DOS \s0(nordique).
.IP "\fB\-7\fR" 4
.IX Item "-7"
Convertit les caractères 8 bits vers l'espace 7 bits.
.IP "\fB\-b, \-\-keep\-bom\fR" 4
.IX Item "-b, --keep-bom"
Conserve la marque d'ordre des octets (\s-1BOM\s0). Si le fichier d'entrée a une
\&\s-1BOM,\s0 elle est écrite dans le fichier de sortie. C'est le comportement par
défaut quand les sauts de lignes sont convertis au format \s-1DOS.\s0 Consultez
aussi l'option \f(CW\*(C`\-r\*(C'\fR.
.IP "\fB\-c, \-\-convmode \s-1MODE_CONV\s0\fR" 4
.IX Item "-c, --convmode MODE_CONV"
Change le mode de conversion. \s-1MODE_CONV\s0 prend l'une des valeurs: \fIascii\fR,
\&\fI7bit\fR, \fIiso\fR, \fImac\fR. Ascii est la valeur par défaut.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
Force la conversion de fichiers binaires.
.IP "\fB\-gb, \-\-gb18030\fR" 4
.IX Item "-gb, --gb18030"
Sous Windows, les fichiers \s-1UTF\-16\s0 sont convertis en \s-1UTF\-8\s0 par défaut sans
considération pour les paramètres de la localisation. Utilisez cette option
pour convertir \s-1UTF\-16\s0 en \s-1GB18030.\s0 Cette option n'est disponible que sous
Windows. Consultez aussi la section \s-1GB18030.\s0
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Affiche l'aide et s'arrête.
.IP "\fB\-i[\s-1FANIONS\s0], \-\-info[=FANIONS] \s-1FICHIER\s0 …\fR" 4
.IX Item "-i[FANIONS], --info[=FANIONS] FICHIER …"
Affiche les informations du fichier. Aucune conversion n'est réalisée.
.Sp
Les informations suivantes sont affichées dans cet ordre: le nombre de sauts
de ligne \s-1DOS,\s0 le nombre de sauts de ligne Unix, le nombre de sauts de ligne
Mac, la marque d'ordre des octets, texte ou binaire, nom du fichier.
.Sp
Exemple de sortie :
.Sp
.Vb 8
\&     6       0       0  no_bom    text    dos.txt
\&     0       6       0  no_bom    text    unix.txt
\&     0       0       6  no_bom    text    mac.txt
\&     6       6       6  no_bom    text    mixed.txt
\&    50       0       0  UTF\-16LE  text    utf16le.txt
\&     0      50       0  no_bom    text    utf8unix.txt
\&    50       0       0  UTF\-8     text    utf8dos.txt
\&     2     418     219  no_bom    binary  dos2unix.exe
.Ve
.Sp
Des fanions facultatifs peuvent être ajoutés pour changer la sortie. Un ou
plusieurs fanions peuvent être ajoutés.
.RS 4
.IP "\fBd\fR" 4
.IX Item "d"
Affiche le nombre de sauts de ligne \s-1DOS.\s0
.IP "\fBu\fR" 4
.IX Item "u"
Affiche le nombre de sauts de ligne Unix.
.IP "\fBm\fR" 4
.IX Item "m"
Affiche le nombre de sauts de ligne Mac.
.IP "\fBb\fR" 4
.IX Item "b"
Afficher la marque d'ordre des octets.
.IP "\fBt\fR" 4
.IX Item "t"
Affiche si le fichier est texte ou binaire.
.IP "\fBc\fR" 4
.IX Item "c"
Affiche uniquement les fichiers qui seraient convertis.
.Sp
Avec le fanion \f(CW\*(C`c\*(C'\fR, dos2unix n'affichera que les fichiers contenant des
sauts de ligne \s-1DOS\s0 alors que unix2dos n'affichera que les noms des fichiers
aillant des sauts de ligne Unix.
.RE
.RS 4
.Sp
Exemples:
.Sp
Afficher les informations pour tous les fichier *.txt :
.Sp
.Vb 1
\&    dos2unix \-i *.txt
.Ve
.Sp
Afficher uniquement le nombre de sauts de ligne \s-1DOS\s0 et Unix :
.Sp
.Vb 1
\&    dos2unix \-idu *.txt
.Ve
.Sp
Montrer uniquement la marque d'ordre des octets :
.Sp
.Vb 1
\&    dos2unix \-\-info=b *.txt
.Ve
.Sp
Liste les fichiers qui ont des sauts de ligne \s-1DOS :\s0
.Sp
.Vb 1
\&    dos2unix \-ic *.txt
.Ve
.Sp
Liste les fichiers qui ont des sauts de ligne Unix :
.Sp
.Vb 1
\&    unix2dos \-ic *.txt
.Ve
.RE
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
La date du fichier de sortie est la même que celle du fichier d'entrée.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
Affiche la licence du programme.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
Ajoute des sauts de lignes additionnels.
.Sp
\&\fBdos2unix\fR: Seuls les sauts de lignes du \s-1DOS\s0 sont changés en deux sauts de
lignes de Unix. En mode Mac, seuls les sauts de lignes Mac sont changés en
deux sauts de lignes Unix.
.Sp
\&\fBunix2dos\fR: Seuls les sauts de lignes Unix sont changés en deux sauts de
lignes du \s-1DOS.\s0 En mode Mac, les sauts de lignes Unix sont remplacés par deux
sauts de lignes Mac.
.IP "\fB\-m, \-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
Écrit une marque d'ordre des octets (\s-1BOM\s0) dans le fichier de sortie. Par
défaut une \s-1BOM UTF\-8\s0 est écrite.
.Sp
Lorsque le fichier d'entrée est en \s-1UTF\-16\s0 et que l'option \f(CW\*(C`\-u\*(C'\fR est
utilisée, une \s-1BOM UTF\-16\s0 est écrite.
.Sp
N'utilisez jamais cette option quand l'encodage du fichier de sortie n'est
ni \s-1UTF\-8\s0 ni \s-1UTF\-16\s0 ni \s-1GB18030.\s0 Consultez également la section \s-1UNICODE.\s0
.IP "\fB\-n, \-\-newfile FICHIER_ENTRÉE \s-1FICHIER_SORTIE\s0 …\fR" 4
.IX Item "-n, --newfile FICHIER_ENTRÉE FICHIER_SORTIE …"
Nouveau mode de fichiers. Convertit le fichier FICHER_ENTRÉE et écrit la
sortie dans le fichier \s-1FICHIER_SORTIE.\s0 Les noms des fichiers doivent être
indiqués par paires. Les jokers \fIne\fR doivent \fIpas\fR être utilisés ou vous
\&\fIperdrez\fR vos fichiers.
.Sp
La personne qui démarre la conversion dans le nouveau mode (pairé) des
fichiers sera le propriétaire du fichier converti. Les permissions de
lecture/écriture du nouveau fichier seront les permissions du fichier
original moins le \fIumask\fR\|(1) de la personne qui exécute la conversion.
.IP "\fB\-o, \-\-oldfile \s-1FICHIER\s0 …\fR" 4
.IX Item "-o, --oldfile FICHIER …"
Ancien mode de fichiers. Convertit le fichier \s-1FICHIER\s0 et écrit la sortie
dedans. Le programme fonctionne dans ce mode par défaut. Les jokers peuvent
être utilisés.
.Sp
Dans l'ancien mode (en place) des fichiers, les fichiers convertis ont le
même propriétaire, groupe et permissions lecture/écriture que le fichier
original. Idem quand le fichier est converti par un utilisateur qui a la
permission d'écrire dans le fichier (par exemple, root). La conversion est
interrompue si il n'est pas possible de conserver les valeurs d'origine. Le
changement de propriétaire pourrait signifier que le propriétaire original
n'est plus en mesure de lire le fichier. Le changement de groupe pourrait
être un risque pour la sécurité. Le fichier pourrait être rendu accessible
en lecture par des personnes à qui il n'est pas destiné. La conservation du
propriétaire, du groupe et des permissions de lecture/écriture n'est
supportée que sous Unix.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Mode silencieux. Supprime les avertissements et les messages. La valeur de
sortie est zéro sauf quand de mauvaises options sont utilisées sur la ligne
de commande.
.IP "\fB\-r, \-\-remove\-bom\fR" 4
.IX Item "-r, --remove-bom"
Supprime la marque d'ordre des octets (\s-1BOM\s0). N'écrit pas la \s-1BOM\s0 dans le
fichier de sortie. Ceci est le comportement par défaut lorsque les sauts de
lignes sont convertis au format Unix. Consultez aussi l'option \f(CW\*(C`\-b\*(C'\fR.
.IP "\fB\-s, \-\-safe\fR" 4
.IX Item "-s, --safe"
Ignore les fichiers binaires (par défaut).
.IP "\fB\-u, \-\-keep\-utf16\fR" 4
.IX Item "-u, --keep-utf16"
Conserve l'encodage \s-1UTF\-16\s0 original du fichier d'entrée. Le fichier de
sortie sera écrit dans le même encodage \s-1UTF\-16 \s0(petit ou grand boutien) que
le fichier d'entrée. Ceci évite la transformation en \s-1UTF\-8.\s0 Une \s-1BOM UTF\-16\s0
sera écrite en conséquent. Cette option peut être désactivée avec l'option
\&\f(CW\*(C`\-ascii\*(C'\fR.
.IP "\fB\-ul, \-\-assume\-utf16le\fR" 4
.IX Item "-ul, --assume-utf16le"
Suppose que le fichier d'entrée est au format \s-1UTF\-16LE.\s0
.Sp
Quand il y a un indicateur d'ordre des octets dans le fichier d'entrée,
l'indicateur a priorité sur cette option.
.Sp
Si vous vous êtes trompé sur le format du fichier d'entrée (par exemple, ce
n'était pas un fichier \s-1UTF16\-LE\s0) et que la conversion réussi, vous
obtiendrez un fichier \s-1UTF\-8\s0 contenant le mauvais texte. Vous pouvez
récupérer le fichier original avec \fIiconv\fR\|(1) en convertissant le fichier de
sortie \s-1UTF\-8\s0 vers du \s-1UTF\-16LE.\s0
.Sp
La présupposition de l'\s-1UTF\-16LE\s0 fonctionne comme un \fImode de
conversion\fR. En utilisant le mode \fIascii\fR par défaut, \s-1UTF\-16LE\s0 n'est plus
présupposé.
.IP "\fB\-ub, \-\-assume\-utf16be\fR" 4
.IX Item "-ub, --assume-utf16be"
Suppose que le fichier d'entrée est au format \s-1UTF\-16BE.\s0
.Sp
Cette option fonctionne comme l'option \f(CW\*(C`\-ul\*(C'\fR.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
Affiche des messages verbeux. Des informations supplémentaires sont
affichées à propos des marques d'ordre des octets et du nombre de sauts de
lignes convertis.
.IP "\fB\-F, \-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
Suit les liens symboliques et convertit les cibles.
.IP "\fB\-R, \-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
Remplace les liens symboliques par les fichiers convertis (les fichiers
cibles originaux restent inchangés).
.IP "\fB\-S, \-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
Ne change pas les liens symboliques ni les cibles (par défaut).
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Affiche les informations de version puis arrête.
.SH "MODE MAC"
.IX Header "MODE MAC"
En mode normal, les sauts de lignes sont convertis du \s-1DOS\s0 vers Unix et
inversement. Les sauts de lignes Mac ne sont pas convertis.
.PP
En mode Mac, les sauts de lignes sont convertis du format Mac au format Unix
et inversement. Les sauts de lignes \s-1DOS\s0 ne sont pas changés.
.PP
Pour fonctionner en mode Mac, utilisez l'option en ligne de commande \f(CW\*(C`\-c
mac\*(C'\fR ou utilisez les commandes \f(CW\*(C`mac2unix\*(C'\fR ou \f(CW\*(C`unix2mac\*(C'\fR.
.SH "MODES DE CONVERSION"
.IX Header "MODES DE CONVERSION"
.IP "\fBascii\fR" 4
.IX Item "ascii"
En mode \f(CW\*(C`ascii\*(C'\fR, seuls les sauts de lignes sont convertis. Ceci est le mode
de conversion par défaut.
.Sp
Bien que le nom de ce mode soit \s-1ASCII,\s0 qui est un standard 7 bits, ce mode
travail en réalité sur 8 bits. Utilisez toujours ce mode lorsque vous
convertissez des fichiers Unicode \s-1UTF\-8.\s0
.IP "\fB7bit\fR" 4
.IX Item "7bit"
Dans ce mode, tous les caractères 8 bits non \s-1ASCII \s0(avec des valeurs entre
128 et 255) sont remplacés par une espace 7 bits.
.IP "\fBiso\fR" 4
.IX Item "iso"
Les caractères sont convertis entre un jeu de caractères \s-1DOS \s0(code page) et
le jeu de caractères \s-1ISO\-8859\-1 \s0(Latin\-1) de Unix. Les caractères \s-1DOS\s0 sans
équivalent \s-1ISO\-8859\-1,\s0 pour lesquels la conversion n'est pas possible, sont
remplacés par un point. La même chose est valable pour les caractères
\&\s-1ISO\-8859\-1\s0 sans équivalent \s-1DOS.\s0
.Sp
Quand seule l'option \f(CW\*(C`\-iso\*(C'\fR est utilisée, dos2unix essaie de déterminer le
code page actif. Quand ce n'est pas possible, dos2unix utilise le code page
\&\s-1CP437\s0 par défaut qui est surtout utilisé aux \s-1USA.\s0 Pour forcer l'utilisation
d'un code page spécifique, utilisez les options \f(CW\*(C`\-437\*(C'\fR (\s-1US\s0), \f(CW\*(C`\-850\*(C'\fR
(Europe de l'ouest), \f(CW\*(C`\-860\*(C'\fR (portugais), \f(CW\*(C`\-863\*(C'\fR (français canadien) ou
\&\f(CW\*(C`\-865\*(C'\fR (nordique). Le code page \s-1CP1252\s0 de Windows (Europe de l'ouest) est
également supporté avec l'option \f(CW\*(C`\-1252\*(C'\fR. Pour d'autres codes pages,
utilisez dos2unix avec \fIiconv\fR\|(1). Iconv supporte une longue liste de codages
de caractères.
.Sp
N'utilisez jamais la conversion \s-1ISO\s0 sur des fichiers textes Unicode. Cela va
corrompre les fichiers encodés en \s-1UTF\-8.\s0
.Sp
Quelques exemples:
.Sp
Convertir du code page par défaut du \s-1DOS\s0 au Latin\-1 Unix :
.Sp
.Vb 1
\&    dos2unix \-iso \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir du \s-1CP850\s0 du \s-1DOS\s0 au Latin\-1 Unix :
.Sp
.Vb 1
\&    dos2unix \-850 \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir du \s-1CP1252\s0 de Windows au Latin\-1 de Unix :
.Sp
.Vb 1
\&    dos2unix \-1252 \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir le \s-1CP1252\s0 de Windows en \s-1UTF\-8\s0 de Unix (Unicode) :
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 entrée.txt | dos2unix > sortie.txt
.Ve
.Sp
Convertir du Latin\-1 de Unix au code page par défaut de \s-1DOS :\s0
.Sp
.Vb 1
\&    unix2dos \-iso \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir le Latin\-1 de Unix en \s-1CP850\s0 du \s-1DOS :\s0
.Sp
.Vb 1
\&    unix2dos \-850 \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir le Latin\-1 de Unix en \s-1CP1252\s0 de Windows :
.Sp
.Vb 1
\&    unix2dos \-1252 \-n entrée.txt sortie.txt
.Ve
.Sp
Convertir le \s-1UTF\-8\s0 de Unix (Unicode) en \s-1CP1252\s0 de Windows :
.Sp
.Vb 1
\&    unix2dos < entrée.txt | iconv \-f UTF\-8 \-t CP1252 > sortie.txt
.Ve
.Sp
Consultez aussi <http://czyborra.com/charsets/codepages.html> et
<http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.SS "Codages"
.IX Subsection "Codages"
Il existe plusieurs codages Unicode. Sous Unix et Linux, les fichiers sont
généralement codés en \s-1UTF\-8.\s0 Sous Windows, les fichiers textes Unicode
peuvent être codés en \s-1UTF\-8, UTF\-16\s0 ou \s-1UTF\-16\s0 gros boutien mais ils sont
majoritairement codés au format \s-1UTF\-16.\s0
.SS "Conversion"
.IX Subsection "Conversion"
Les fichiers textes Unicode peuvent avoir des sauts de lignes \s-1DOS,\s0 Unix ou
Mac, tout comme les fichiers textes normaux.
.PP
Toutes les versions de dos2unix et unix2dos peuvent convertir des fichiers
codés en \s-1UTF\-8\s0 car \s-1UTF\-8\s0 a été conçu pour être rétro\-compatible avec
l'\s-1ASCII.\s0
.PP
Dos2unix et unix2dos, avec le support pour l'Unicode \s-1UTF\-16,\s0 peuvent lire
les fichiers textes codés sous forme petit boutien ou gros boutien. Pour
savoir si dos2unix a été compilé avec le support \s-1UTF\-16\s0 tapez \f(CW\*(C`dos2unix
\&\-V\*(C'\fR.
.PP
Sous Unix/Linux, les fichiers encodés en \s-1UTF\-16\s0 sont convertis vers
l'encodage des caractères de la localisation. Utilisez \fIlocale\fR\|(1) pour
découvrir quel encodage de caractères est utilisé. Lorsque la conversion
n'est pas possible, une erreur de conversion est produite et le fichier est
abandonné.
.PP
Sous Windows, les fichiers \s-1UTF\-16\s0 sont convertis par défaut en \s-1UTF\-8.\s0 Les
fichiers textes formatés en \s-1UTF\-8\s0 sont bien supportés sous Windows et
Unix/Linux.
.PP
Les codages \s-1UTF\-16\s0 et \s-1UTF\-8\s0 sont parfaitement compatibles. Il n'y a pas de
pertes lors de la conversion. Lorsqu'une erreur de conversion \s-1UTF\-16\s0 vers
\&\s-1UTF\-8\s0 survient, par exemple, quand le fichier d'entrée \s-1UTF\-16\s0 contient une
erreur, le fichier est ignoré.
.PP
Quand l'option \f(CW\*(C`\-u\*(C'\fR est utilisée, le fichier de sortie est écrit dans le
même encodage \s-1UTF\-16\s0 que le fichier d'entrée. L'option \f(CW\*(C`\-u\*(C'\fR empêche la
conversion en \s-1UTF\-8.\s0
.PP
Dos2unix et unix2dos n'ont pas d'option pour convertir des fichiers \s-1UTF\-8\s0 en
\&\s-1UTF\-16.\s0
.PP
Les modes de conversion \s-1ISO\s0 et 7 bits ne fonctionnent pas sur des fichiers
\&\s-1UTF\-16.\s0
.SS "Marque d'ordre des octets"
.IX Subsection "Marque d'ordre des octets"
Les fichiers textes Unicode sous Windows on généralement un indicateur
d'ordre des octets (\s-1BOM\s0) car de nombreux programmes Windows (y compris
Notepad) ajoutent cet indicateur par défaut. Consultez aussi
<http://fr.wikipedia.org/wiki/Indicateur_d%27ordre_des_octets>.
.PP
Sous Unix, les fichiers Unicodes n'ont habituellement pas de \s-1BOM.\s0 Il est
supposé que les fichiers textes sont codés selon le codage de
l'environnement linguistique.
.PP
Dos2unix ne peut détecter que le fichier est au format \s-1UTF\-16\s0 si le fichier
n'a pas de \s-1BOM.\s0 Quand le fichier \s-1UTF\-16\s0 n'a pas cet indicateur, dos2unix
voit le fichier comme un fichier binaire.
.PP
Utilisez l'option \f(CW\*(C`\-ul\*(C'\fR ou \f(CW\*(C`\-ub\*(C'\fR pour convertir un fichier \s-1UTF\-16\s0 sans
\&\s-1BOM.\s0
.PP
Dos2unix, par défaut, n'écrit pas de \s-1BOM\s0 dans le fichier de sortie. Avec
l'option \f(CW\*(C`\-b\*(C'\fR, Dos2unix écrit une \s-1BOM\s0 quand le fichier d'entrée a une \s-1BOM.\s0
.PP
Unix2dos écrit par défaut une \s-1BOM\s0 dans le fichier de sortie quand le fichier
d'entrée a une \s-1BOM.\s0 Utilisez l'option \f(CW\*(C`\-r\*(C'\fR pour supprimer la \s-1BOM.\s0
.PP
Dos2unix et unix2dos écrivent toujours une \s-1BOM\s0 quand l'option \f(CW\*(C`\-m\*(C'\fR est
utilisée.
.SS "Exemples Unicode"
.IX Subsection "Exemples Unicode"
Convertir de l'\s-1UTF\-16\s0 Windows (avec \s-1BOM\s0) vers l'\s-1UTF\-8\s0 de Unix :
.PP
.Vb 1
\&    dos2unix \-n entrée.txt sortie.txt
.Ve
.PP
Convertir de l'\s-1UTF\-16LE\s0 de Windows (sans \s-1BOM\s0) vers l'\s-1UTF\-8\s0 de Unix :
.PP
.Vb 1
\&    dos2unix \-ul \-n entrée.txt sortie.txt
.Ve
.PP
Convertir de l'\s-1UTF\-8\s0 de Unix vers l'\s-1UTF\-8\s0 de Windows avec \s-1BOM :\s0
.PP
.Vb 1
\&    unix2dos \-m \-n entrée.txt sortie.txt
.Ve
.PP
Convertir de l'\s-1UTF\-8\s0 de Unix vers l'\s-1UTF\-16\s0 de Windows :
.PP
.Vb 1
\&    unix2dos < entrée.txt | iconv \-f UTF\-8 \-t UTF\-16 > sortie.txt
.Ve
.SH "GB18030"
.IX Header "GB18030"
\&\s-1GB18030\s0 est un standard du gouvernement chinois. Tout logiciel vendu en
Chine doit officiellement supporter un sous ensemble obligatoire du standard
\&\s-1GB18030.\s0 Consultez <http://fr.wikipedia.org/wiki/GB_18030>.
.PP
\&\s-1GB18030\s0 est entièrement compatible avec Unicode et peut être considéré comme
étant un format de transformation unicode. Comme \s-1UTF\-8, GB18030\s0 est
compatible avec \s-1ASCII. GB18030\s0 est aussi compatible avec le code page 936 de
Windows aussi connu comme \s-1GBK.\s0
.PP
Sous Unix/Linux, les fichiers \s-1UTF\-16\s0 sont convertis en \s-1GB18030\s0 quand
l'encodage de l'environnement linguistique est \s-1GB18030.\s0 Notez que cela ne
fonctionnera que si l'environnement linguistique est supporté par le
système. Utilisez la commande \f(CW\*(C`locale \-a\*(C'\fR pour obtenir la liste des
environnements linguistiques supportés.
.PP
Sous Windows, vous avez besoin de l'option \f(CW\*(C`\-gb\*(C'\fR pour convertir \s-1UTF\-16\s0 en
\&\s-1GB18030.\s0
.PP
Les fichiers encodés en \s-1GB18030\s0 peuvent avoir une marque d'ordre des octets,
comme les fichiers Unicode.
.SH "EXEMPLES"
.IX Header "EXEMPLES"
Lire l'entrée depuis « stdin » et écrire la sortie vers « stdout » :
.PP
.Vb 2
\&    dos2unix
\&    dos2unix \-l \-c mac
.Ve
.PP
Convertir et remplacer a.txt. Convertir et remplace b.txt :
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
Convertir et remplacer a.txt en mode de conversion ascii :
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Convertir et remplacer a.txt en mode de conversion ascii. Convertir et
remplacer b.txt en mode de conversion 7 bits :
.PP
.Vb 3
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
\&    dos2unix \-ascii a.txt \-7 b.txt
.Ve
.PP
Convertir a.txt depuis le format Mac vers le format Unix :
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Convertir a.txt du format Unix au format Mac :
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Convertir et remplacer a.txt tout en conservant la date originale :
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
Convertir a.txt et écrire dans e.txt :
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
Convertir a.txt et écrire dans e.txt. La date de e.txt est la même que celle
de a.txt :
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
Convertir et remplacer a.txt. Convertir b.txt et écrire dans e.txt :
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
Convertir c.txt et écrire dans e.txt. Convertir et remplacer
a.txt. Convertir et remplacer b.txt. Convertir d.txt et écrire dans f.txt :
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "CONVERSIONS RÉCURSIVES"
.IX Header "CONVERSIONS RÉCURSIVES"
Utilisez dos2unix avec les commandes \fIfind\fR\|(1) et \fIxargs\fR\|(1) pour convertir
récursivement des fichiers textes dans une arborescence de répertoires. Par
exemple, pour convertir tous les fichiers .txt dans les répertoires sous le
répertoire courant, tapez:
.PP
.Vb 1
\&    find . \-name *.txt |xargs dos2unix
.Ve
.SH "PARAMÈTRES LINGUISTIQUES"
.IX Header "PARAMÈTRES LINGUISTIQUES"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
La langue principale est sélectionnée par la variable d'environnement
\&\s-1LANG.\s0 La variable \s-1LANG\s0 est composée de plusieurs parties. La première partie
est le code de la langue en minuscules. La deuxième partie est le code du
pays en majuscules précédé d'un souligné. Elle est facultative. Il y a aussi
une troisième partie facultative qui est le codage des caractères précédé
par un point. Voici quelques exemples pour un shell au standard \s-1POSIX:\s0
.Sp
.Vb 7
\&    export LANG=fr               Français
\&    export LANG=fr_CA            Français, Canada
\&    export LANG=fr_BE            Français, Belgique
\&    export LANG=es_ES            Espagnol, Espagne
\&    export LANG=es_MX            Espagnol, Mexique
\&    export LANG=en_US.iso88591   Anglais, USA, codage Latin\-1
\&    export LANG=en_GB.UTF\-8      Anglais, UK, codage UTF\-8
.Ve
.Sp
La liste complète des codes de langues et de pays est dans le manuel de
gettext:
<http://www.gnu.org/software/gettext/manual/html_node/Usual\-Language\-Codes.html>
.Sp
Sur les systèmes Unix, vous pouvez utiliser la commande \fIlocale\fR\|(1) pour
obtenir des informations sur l'environnement linguistique.
.IP "\fB\s-1LANGUE\s0\fR" 4
.IX Item "LANGUE"
Avec la variable d'environnement \s-1LANGUAGE,\s0 vous pouvez spécifier une liste
de langues prioritaires séparées par des deux-points. Dos2unix fait passer
\&\s-1LANGUAGE\s0 avant \s-1LANG.\s0 Par exemple, pour utiliser le français avant l'anglais:
\&\f(CW\*(C`LANGUAGE=fr:en\*(C'\fR. Vous devez d'abord activer l'environnement linguistique
en assignant une valeur autre que « C » à \s-1LANG \s0(ou \s-1LC_ALL\s0). Ensuite, vous
pourrez utiliser la liste de priorité avec la variable \s-1LANGUAGE.\s0 Voyez
également le manuel de gettext:
<http://www.gnu.org/software/gettext/manual/html_node/The\-LANGUAGE\-variable.html>
.Sp
Si vous sélectionnez une langue qui n'est pas disponible, vous obtiendrez
des messages en anglais standard.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Grâce à la variable d'environnement \s-1DOS2UNIX_LOCALEDIR,\s0 la variable
\&\s-1LOCALEDIR\s0 compilée dans l'application peut être remplacée. \s-1LOCALEDIR\s0 est
utilisée pour trouver les fichiers de langue. La valeur par défaut de \s-1GNU\s0
est \f(CW\*(C`/usr/local/share/locale\*(C'\fR. L'option \fB\-\-version\fR affiche la valeur de
\&\s-1LOCALEDIR\s0 utilisée.
.Sp
Exemple (shell \s-1POSIX\s0):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "VALEUR DE RETOUR"
.IX Header "VALEUR DE RETOUR"
Zéro est retourné en cas de succès. Si une erreur système se produit, la
dernière erreur système est retournée. Pour les autres erreurs, 1 est
renvoyé.
.PP
La valeur de sortie est toujours zéro en mode silencieux sauf quand de
mauvaises options sont utilisées sur la ligne de commande.
.SH "STANDARDS"
.IX Header "STANDARDS"
<http://fr.wikipedia.org/wiki/Fichier_texte>
.PP
<http://fr.wikipedia.org/wiki/Retour_chariot>
.PP
<http://fr.wikipedia.org/wiki/Fin_de_ligne>
.PP
<http://fr.wikipedia.org/wiki/Unicode>
.SH "AUTEURS"
.IX Header "AUTEURS"
Benjamin Lin \- <blin@socs.uts.edu.au>, Bernd Johannes Wuebben (mode
mac2unix) \- <wuebben@kde.org>, Christian Wurll (ajout de saut de ligne
supplémentaire) \- <wurll@ira.uka.de>, Erwin Waterlander \-
<waterlan@xs4all.nl> (Mainteneur)
.PP
Page du projet: <http://waterlan.home.xs4all.nl/dos2unix.html>
.PP
Page SourceForge: <http://sourceforge.net/projects/dos2unix/>
.SH "VOIR AUSSI"
.IX Header "VOIR AUSSI"
\&\fIfile\fR\|(1)  \fIfind\fR\|(1)  \fIiconv\fR\|(1)  \fIlocale\fR\|(1)  \fIxargs\fR\|(1)
