
Format_String	common.c	257	An attacker can control the format string argument to printf() at common.c line 257, allowing an attack much like a buffer overflow.	common.c	257	
Format_String	common.c	256	An attacker can control the format string argument to printf() at common.c line 256, allowing an attack much like a buffer overflow.	common.c	256	
Format_String	common.c	255	An attacker can control the format string argument to printf() at common.c line 255, allowing an attack much like a buffer overflow.	common.c	255	
Format_String	common.c	254	An attacker can control the format string argument to printf() at common.c line 254, allowing an attack much like a buffer overflow.	common.c	254	
Format_String	common.c	258	An attacker can control the format string argument to printf() at common.c line 258, allowing an attack much like a buffer overflow.	common.c	258	
System_Information_Leak__Internal	common.c	364	The function PrintVersion() in common.c reveals system data or debugging information by calling printf() on line 364.  The information revealed by printf() could help an adversary form a plan of attack.	dos2unix.c	463	
System_Information_Leak__Internal	common.c	364	The function PrintVersion() in common.c reveals system data or debugging information by calling printf() on line 364.  The information revealed by printf() could help an adversary form a plan of attack.	unix2dos.c	471	
System_Information_Leak__Internal	common.c	211	The function regfile_target() in common.c reveals system data or debugging information by calling fprintf() on line 211.  The information revealed by fprintf() could help an adversary form a plan of attack.	common.c	210	
System_Information_Leak__Internal	common.c	181	The function regfile() in common.c reveals system data or debugging information by calling fprintf() on line 181.  The information revealed by fprintf() could help an adversary form a plan of attack.	common.c	180	
System_Information_Leak__Internal	common.c	483	The function ResolveSymbolicLink() in common.c reveals system data or debugging information by calling fprintf() on line 483.  The information revealed by fprintf() could help an adversary form a plan of attack.	common.c	482	
Dangerous_Function__strcpy__	dos2unix.c	460	The function strcpy() cannot be used safely.  It should not be used.
Dangerous_Function__strcpy__	dos2unix.c	472	The function strcpy() cannot be used safely.  It should not be used.
Dangerous_Function__strcpy__	dos2unix.c	465	The function strcpy() cannot be used safely.  It should not be used.
Dangerous_Function__strcpy__	dos2unix.c	468	The function strcpy() cannot be used safely.  It should not be used.
Dangerous_Function__strcpy__	dos2unix.c	500	The function strcpy() cannot be used safely.  It should not be used.
Path_Manipulation	common.c	376	Attackers can control the filesystem path argument to fopen() at common.c line 376, which allows them to access or modify otherwise protected files.	unix2dos.c	456	
Path_Manipulation	common.c	376	Attackers can control the filesystem path argument to fopen() at common.c line 376, which allows them to access or modify otherwise protected files.	dos2unix.c	448	
Path_Manipulation	common.c	1024	Attackers can control the filesystem path argument to unlink() at common.c line 1024, which allows them to access or modify otherwise protected files.	unix2dos.c	456	
Path_Manipulation	common.c	1024	Attackers can control the filesystem path argument to unlink() at common.c line 1024, which allows them to access or modify otherwise protected files.	dos2unix.c	448	
Path_Manipulation	common.c	1064	Attackers can control the filesystem path argument to rename() at common.c line 1064, which allows them to access or modify otherwise protected files.	unix2dos.c	456	
Memory_Leak	common.c	409	The function MakeTempFileFrom() in common.c allocates memory on line 409 and fails to free it.
Memory_Leak	unix2dos.c	497	The function main() in unix2dos.c allocates memory on line 497 and fails to free it.
Memory_Leak	dos2unix.c	489	The function main() in dos2unix.c allocates memory on line 489 and fails to free it.
Integer_Overflow	common.c	428	The function MakeTempFileFrom() in common.c does not account for integer overflow, which can result in a logic error or a buffer overflow.	dos2unix.c	448	
Integer_Overflow	common.c	428	The function MakeTempFileFrom() in common.c does not account for integer overflow, which can result in a logic error or a buffer overflow.	unix2dos.c	456	
Missing_Check_against_Null	unix2dos.c	497	The function main() in unix2dos.c can dereference a null pointer on line 498 because it does not check the return value of malloc(), which might return null.
Missing_Check_against_Null	dos2unix.c	489	The function main() in dos2unix.c can dereference a null pointer on line 490 because it does not check the return value of malloc(), which might return null.
Poor_Style__Value_Never_Read	common.c	1838	The function parse_options() in common.c never uses the value it assigns to the variable RetVal on line 1838.
Poor_Style__Value_Never_Read	common.c	1820	The function parse_options() in common.c never uses the value it assigns to the variable RetVal on line 1820.
Race_Condition__File_System_Access	common.c	1485	The window of time between the call to <a href="location://common.c###114###0###0">symbolic_link()</a> and <a href="location://common.c###374###0###0">OpenInFile()</a> can be exploited to launch a privilege escalation attack.
Race_Condition__File_System_Access	common.c	896	The window of time between the call to <a href="location:///usr/include/sys/stat.h###218###0###0">stat()</a> and <a href="location://common.c###374###0###0">OpenInFile()</a> can be exploited to launch a privilege escalation attack.
Insecure_Temporary_File	common.c	441	Calling mkstemp() leads to insecure temporary files, leaving application or system data vulnerable.