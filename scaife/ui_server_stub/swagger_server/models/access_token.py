# coding: utf-8
# <legal>
# SCALe version r.6.7.0.0.A
# 
# Copyright 2021 Carnegie Mellon University.
# 
# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
# INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
# UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR
# IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF
# FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS
# OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
# MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT,
# TRADEMARK, OR COPYRIGHT INFRINGEMENT.
# 
# Released under a MIT (SEI)-style license, please see COPYRIGHT file or
# contact permission@sei.cmu.edu for full terms.
# 
# [DISTRIBUTION STATEMENT A] This material has been approved for public
# release and unlimited distribution.  Please see Copyright notice for
# non-US Government use and distribution.
# 
# DM19-1274
# </legal>

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AccessToken(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, x_access_token: str = None):  # noqa: E501
        """AccessToken - a model defined in Swagger

        :param x_access_token: The x_access_token of this AccessToken.  # noqa: E501
        :type x_access_token: str
        """
        self.swagger_types = {
            'x_access_token': str
        }

        self.attribute_map = {
            'x_access_token': 'x_access_token'
        }

        self._x_access_token = x_access_token

    @classmethod
    def from_dict(cls, dikt) -> 'AccessToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The access_token of this AccessToken.  # noqa: E501
        :rtype: AccessToken
        """
        return util.deserialize_model(dikt, cls)

    @property
    def x_access_token(self) -> str:
        """Gets the x_access_token of this AccessToken.


        :return: The x_access_token of this AccessToken.
        :rtype: str
        """
        return self._x_access_token

    @x_access_token.setter
    def x_access_token(self, x_access_token: str):
        """Sets the x_access_token of this AccessToken.


        :param x_access_token: The x_access_token of this AccessToken.
        :type x_access_token: str
        """

        self._x_access_token = x_access_token
